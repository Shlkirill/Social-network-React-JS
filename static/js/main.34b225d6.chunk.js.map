{"version":3,"sources":["common/forms/formsControls/formsControls.module.css","common/forms/AddNewText.module.css","components/Messages/DialogueWindow/DialogueWindow.module.css","components/LeftMenu/FriendList/FriendList.module.css","components/LeftMenu/FriendList/Friend/Friend.module.css","components/Header/Header.module.css","components/Profile/Profile.module.css","img/load-final.gif","common/loading/loading.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","img/logo2.PNG","components/Login/Login.module.css","components/LeftMenu/LeftMenu.module.css","components/Users/Users.module.css","api/api.tsx","common/loading/loading.tsx","common/toggleFollow/BottonToggleFollow.tsx","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Posts/Post/Post.jsx","utils/validations/validation.tsx","common/forms/formsControls/formsControls.tsx","common/forms/AddNewText.tsx","components/Profile/Posts/Posts.tsx","redux/profileReducer.ts","components/Profile/Posts/PostsContainer.tsx","components/Profile/Profile.tsx","components/hoc/withAuthRedirect.js","components/Profile/Profile–°ontainer.tsx","components/Users/User/User.tsx","components/Users/Users.tsx","redux/usersReducer.ts","redux/friendsReducer.ts","redux/users-selectors.ts","components/Users/UsersContainer.tsx","components/Messages/Dialog/Dialog.tsx","components/Messages/DialogMe/DialogMe.tsx","components/Messages/DialogueWindow/DialogueWindow.tsx","components/Messages/DialogWithPerson/DialogWithPerson.tsx","components/Messages/Messages.tsx","components/Messages/MessagesContainer.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/LeftMenu/FriendList/Friend/Friend.tsx","components/LeftMenu/FriendList/FriendList.tsx","components/LeftMenu/LeftMenu.tsx","components/LeftMenu/LeftMenu container.tsx","components/Header/Header.tsx","redux/authReducer.ts","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","components/Login/LoginContainer.tsx","redux/appReducer.ts","components/Profile/ProfileInfo/EditProfile/EditProfile.tsx","components/Profile/ProfileInfo/EditProfile/EditProfileContainer.tsx","App.js","serviceWorker.js","redux/reduxStore.ts","index.js","components/Users/User/User.module.css","img/empty-avatar.png","common/toggleFollow/Botton.module.css","components/Messages/Dialog/Dialog.module.css","components/Messages/DialogMe/DialogMe.module.css","components/Profile/Posts/Posts.module.css","components/Profile/Posts/Post/Post.module.css","components/Profile/ProfileInfo/EditProfile/EditProfile.module.css","components/Messages/Messages.module.css","components/Messages/DialogWithPerson/DialogWithPerson.module.css"],"names":["module","exports","ResultCodesEnum","Loading","src","loadLogo","alt","className","styles","BottonToggleFollow","initial","action","followed","arr","id","result","some","item","onClick","disable","buttonUnfollow","disabled","buttonFollow","ProfileStatus","props","useState","editMode","setEditMode","status","statusText","setStatusText","disableMode","getUpdateSatus","getUserStatus","authId","useEffect","userId","statusEditOn","onChange","e","target","value","match","placeholder","maxLength","autoFocus","type","onBlur","statusEditOff","statusAllUsers","ProfileInfo","uploadMode","setpUploadMode","profile","profileInfo","user","userAvatarAndFollow","photos","large","photoDefault","avatar","buttonUnderAvatar","togglefollowUser","isProgress","buttonEditAvatar","info","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","social","contacts","facebook","href","website","vk","twitter","instagram","youtube","github","mainLink","editButton","to","popUpUploadAvatarContainer","hidden","dataset","click","data-click","popUpUploadAvatar","accept","previousSibling","files","length","putAvatarToServer","Post","post","small","text","postLike","addLike","likes","required","max","email","test","TextareaField","input","meta","touched","error","console","log","inputField","maxLength100","maxLength200","FormAddNewText","onSubmit","handleSubmit","Field","inputText","name","component","validate","validateCreactor","inputSubmit","pristine","submitting","invalid","Posts","React","memo","ContactForm","reduxForm","form","postsData","map","key","postsBlock","createPost","addPost","newPost","posts","min","instance","axios","create","baseURL","withCredentials","headers","apiGetUsers","count","page","a","get","response","data","apiAuth","apiCaptcha","apiSetProfile","apiGetFollowUser","apitogglefollowUser","delete","apiGetStatus","apiUpdateStatus","put","apiLogin","objData","apiUploadAvatar","photo","formData","FormData","append","setUserProfileAC","userProfile","setFollowedUserAC","followingInProgressAC","uploadAnAvatarAC","initialState","likeClick","followingInProgress","setProfileTC","dispatch","undefined","profileReducer","stateCopy","state","newId","newLikes","push","k","clickPost","mapDispatchToProps","connect","profilePage","Profile","main","withAuthRedirectComponent","Component","isAuth","auth","setUserProfile","setFollowedUser","setProfile","getFollowUser","compose","withRouter","params","User","user_logo","user_info","Users","pagesCount","Math","ceil","totalUsersCount","pageSize","arrPages","i","userDate","users","tittle","paginationContainer","isFetching","commentBox","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","getActivePage","selected","containerClassName","pagination","subContainerClassName","activeClassName","activePage","select","setCountUsers","usersList","actions","totalCount","clickPage","getUsersTC","items","setCountUserTC","UsersReducer","filter","friends","messages","1","friendsReducer","newMessage","newFriend","getUsersSuperCreateSelectorTEST","createSelector","allUsers","u","getUsersPageSize","getTotalUsersCount","getFetching","getFollowingInProgress","UsersContainer","setCountUser","this","getUsers","addFriend","Dialog","dialog","img","message","DialogMe","DialogueWindow","allMessages","chatInput","addMessage","DialogWithPerson","active","person","Messages","interlocutorName","friendsPage","dialogWindowName","path","headline","dialogs","mapDispatcherToProps","News","Music","container","autoPlay","controls","Settings","Friend","wrapper","FriendList","friendsList","friendsWindow","infinite","speed","autoplay","autoplaySpeed","slidesToShow","slidesToScroll","rows","LeftMenu","leftMenu","logo","menu","LeftMenuContainer","Header","logoutAccount","header","button","setUserDataAC","login","captchaUrl","authorizationTC","resultCode","Success","AuthReducer","url","HeaderContainer","alert","minLength6","maxLength30","Login","captcha","containerLoginForm","loginForm","rememberCheckbox","submitContainer","submit","accountLogin","stopSubmit","_error","initialized","appReducer","EditProfile","contactsArr","Object","keys","inputForm","inputName","inputFieldParent","editProfile","title","textareaField","submitSucceeded","putProfileInfo","dataInfo","EditProfileForm","initialValues","App","initializeApp","initialize","exact","appInitial","Boolean","window","location","hostname","rootReducer","combineReducers","usersReducer","authReducer","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.34b225d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"formsControls_error__fUQMw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputText\":\"AddNewText_inputText__2KzqH\",\"inputSubmit\":\"AddNewText_inputSubmit__1D2ZC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allMessages\":\"DialogueWindow_allMessages__168EW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsList\":\"FriendList_friendsList__sErCK\",\"friendsWindow\":\"FriendList_friendsWindow__3KOIJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Friend_wrapper__25kAa\",\"avatar\":\"Friend_avatar__Lfhau\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3JxG1\",\"button\":\"Header_button__2GCZR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Profile_main__26XCL\"};","module.exports = __webpack_public_path__ + \"static/media/load-final.bb4fdd52.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadLogo\":\"loading_loadLogo__-2nSU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__3UQ4d\",\"user\":\"ProfileInfo_user__1u2-j\",\"userAvatarAndFollow\":\"ProfileInfo_userAvatarAndFollow__XF-r4\",\"buttonUnderAvatar\":\"ProfileInfo_buttonUnderAvatar__107cH\",\"buttonEditAvatar\":\"ProfileInfo_buttonEditAvatar__RG68N\",\"avatar\":\"ProfileInfo_avatar__1wWkI\",\"info\":\"ProfileInfo_info__1MNss\",\"social\":\"ProfileInfo_social__2FSKQ\",\"statusEditOff\":\"ProfileInfo_statusEditOff__jg_CX\",\"statusAllUsers\":\"ProfileInfo_statusAllUsers__3s7zG\",\"statusEditOn\":\"ProfileInfo_statusEditOn__2r70j\",\"popUpUploadAvatarContainer\":\"ProfileInfo_popUpUploadAvatarContainer__jBqT8\",\"popUpUploadAvatar\":\"ProfileInfo_popUpUploadAvatar__EEicP\",\"hidden\":\"ProfileInfo_hidden__JpNtp\",\"editButton\":\"ProfileInfo_editButton__3ZTmA\"};","module.exports = __webpack_public_path__ + \"static/media/logo2.aeb25798.PNG\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__2CJwm\",\"containerLoginForm\":\"Login_containerLoginForm__2tJWb\",\"tittle\":\"Login_tittle__2HrI3\",\"loginForm\":\"Login_loginForm__2hTPF\",\"rememberCheckbox\":\"Login_rememberCheckbox__3ahtb\",\"inputField\":\"Login_inputField__Vy9ls\",\"submitContainer\":\"Login_submitContainer__1tf9-\",\"submit\":\"Login_submit__2GwlW\",\"error\":\"Login_error__3CGr5\",\"captcha\":\"Login_captcha__2Mx8z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftMenu\":\"LeftMenu_leftMenu__2GSGv\",\"logo\":\"LeftMenu_logo__fFdA7\",\"menu\":\"LeftMenu_menu__3N44Q\",\"active\":\"LeftMenu_active__3hp3z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__2NNoa\",\"tittle\":\"Users_tittle__31R-H\",\"button\":\"Users_button__2eOt7\",\"paginationContainer\":\"Users_paginationContainer__3JS-Q\",\"pagination\":\"Users_pagination__3Vp00\",\"select\":\"Users_select__3PoBu\",\"activePage\":\"Users_activePage__QLk_L\",\"usersList\":\"Users_usersList__MuIyT\"};","import axios from 'axios';\r\nimport { FormDataType } from '../redux/authReducer';\r\nimport { profileType } from '../redux/profileReducer';\r\nimport { usersType } from '../redux/usersReducer';\r\n\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1\r\n}\r\n\r\nexport type AuthMeType = {\r\n    data: { id: number, login: string, email: string },\r\n    fieldsErrors: Array<string>,\r\n    messages: Array<string>,\r\n    resultCode: ResultCodesEnum,\r\n}\r\n\r\ntype GetUsersType = {\r\n    error: string | null\r\n    items: Array<usersType>\r\n    totalCount: number\r\n}\r\ntype CaptchaType = {\r\n    url:string\r\n}\r\n\r\ntype followUserType = {\r\n    data: boolean\r\n}\r\ntype GetStatusType = {\r\n    data: string,\r\n    status: number\r\n}\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': '1f53d161-bcd3-47d8-8414-bda7e59dbf15',\r\n    }\r\n})\r\n\r\nexport const apiGetUsers = async (count: number, page: number) => {\r\n    let response = await instance.get<GetUsersType>(`users?count=${count}&page=${page}`)\r\n    return response.data\r\n};\r\n\r\nexport const apiAuth = async () => {\r\n    let response = await instance.get<AuthMeType>(`auth/me`);\r\n    return response.data\r\n};\r\n\r\nexport const apiCaptcha = async () => {\r\n    let response = await instance.get<CaptchaType>(`/security/get-captcha-url`);\r\n    return response.data;\r\n};\r\n\r\nexport const apiSetProfile = async (userId: number) => {\r\n    let response = await instance.get<profileType>(`profile/${userId}`);\r\n    return response.data\r\n};\r\n\r\nexport const apiGetFollowUser = async (id: number) => {\r\n    let response = await instance.get<followUserType>(`follow/${id}`);\r\n    return response.data\r\n};\r\n\r\nexport const apitogglefollowUser = (id: number, value: boolean) => {\r\n    return value ? instance.delete(`/follow/${id}`) : instance.post(`follow/${id}`);\r\n}\r\n\r\nexport const apiGetStatus = async (userId: number) => {\r\n    let response = await instance.get<GetStatusType>(`/profile/status/${userId}`);\r\n    return response.data\r\n};\r\n\r\nexport const apiUpdateStatus = (status: string) => {\r\n    return instance.put(`/profile/status`, { status: status })\r\n};\r\nexport const apiLogin = (objData: FormDataType) => {\r\n    return instance.post(`/auth/login`, objData);\r\n};\r\nexport const apiLogout = () => {\r\n    return instance.delete(`/auth/login`)\r\n};\r\nexport const apiUploadAvatar = (photo: string) => {\r\n    let formData = new FormData()\r\n    formData.append('image', photo)\r\n    return instance.put(`/profile/photo`, formData, {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n        }\r\n    })\r\n};\r\nexport const apiEditProfile = (objData: string) => {\r\n    return instance.put(`/profile`, objData)\r\n};","import React from 'react';\r\nimport loadLogo from '../../img/load-final.gif'\r\nimport styles from './loading.module.css'\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <img src={loadLogo} alt=\"\" className={styles.loadLogo}/>\r\n    )\r\n}\r\n\r\nexport default Loading","import React from 'react';\r\nimport styles from './Botton.module.css'\r\n\r\nexport const BottonToggleFollow = (initial: string, action: () => void, followed: boolean, arr: boolean, id: number|null) => {\r\n    let result;\r\n    if (initial == \"ONE_USER\") {\r\n        result = arr;\r\n\r\n    } else if (initial == \"ALL_USER\") {\r\n        //@ts-ignore\r\n        result = arr.some((item) => {\r\n            return item == id;\r\n        })\r\n    }\r\n    return followed == true ? <button onClick={action} className={result ? styles.disable : styles.buttonUnfollow} disabled={result}>{result ? 'wait...' : 'unfollow'}</button> :\r\n        <button onClick={action} className={result ? styles.disable : styles.buttonFollow} disabled={result}>{result ? 'wait...' : 'follow'}</button>\r\n}","import React from 'react';\r\nimport styles from './ProfileInfo.module.css'\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\ntype PropsType = {\r\n    status: string,\r\n    getUpdateSatus: (statusText: string) => void\r\n    getUserStatus: (authId: number) => void,\r\n    authId: number,\r\n    userId: number,\r\n}\r\n\r\nconst ProfileStatus: React.FC<PropsType> = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [statusText, setStatusText] = useState(props.status)\r\n\r\n    let enableMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    let disableMode = () => {\r\n        setEditMode(false);\r\n        if (statusText !== props.status) {\r\n            props.getUpdateSatus(statusText)\r\n            props.getUserStatus(props.authId)\r\n        };\r\n    }\r\n    let editStatusText = (e: any) => {\r\n        e.target.value.match(/^[ ]+$/) || e.target.value == '' ? setStatusText(props.status) : setStatusText(e.target.value)\r\n    }\r\n    useEffect(() => {\r\n        setStatusText(props.status);\r\n    }, [props.status])\r\n    return (\r\n        <div>\r\n            {props.userId == props.authId ? <div>{editMode == true ?\r\n                <div className={styles.statusEditOn}>\r\n                    <input onChange={editStatusText} placeholder=\"max-60 symbol\" maxLength={60} autoFocus={true} type=\"text\" onBlur={disableMode} />\r\n                    <button onClick={disableMode}><i className=\"fas fa-arrow-circle-right\"></i></button>\r\n                </div> :\r\n                <div className={styles.statusEditOff}>\r\n                    <span onClick={enableMode}> {statusText || '–°—Ç–∞—Ç—É—Å –ø—É—Å—Ç'}</span>\r\n                </div>}\r\n            </div> :\r\n                <div className={styles.statusAllUsers}>\r\n                    <span> {statusText || '–°—Ç–∞—Ç—É—Å –ø—É—Å—Ç'}</span>\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus","import React, { useState } from 'react';\r\nimport Loading from '../../../common/loading/loading';\r\nimport styles from './ProfileInfo.module.css'\r\nimport photoDefault from '../../../img/empty-avatar.png'\r\nimport { BottonToggleFollow } from '../../../common/toggleFollow/BottonToggleFollow';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { PropsTypeProfileInfo } from '../Profile';\r\n\r\n\r\n\r\nconst ProfileInfo: React.FC<PropsTypeProfileInfo> = (props) => {\r\n\r\n  let [uploadMode, setpUploadMode] = useState(false);\r\n\r\n  if (!props.profile) {\r\n    return <Loading />\r\n  }\r\n\r\n  let onUploadMode = () => {\r\n    setpUploadMode(true);\r\n  }\r\n  let offUploadMode = (e: any) => {\r\n    if (!e.target.dataset.click) return\r\n    setpUploadMode(false);\r\n  }\r\n  let onToggleFollow = () => {\r\n    props.togglefollowUser(props.profile.userId, props.followed);\r\n  };\r\n  let onUploadanAvatar = (e: any) => {\r\n    if (e.target.previousSibling.files.length > 0) {\r\n      props.putAvatarToServer(e.target.previousSibling.files[0]);\r\n      setpUploadMode(false);\r\n    }\r\n  };\r\n  return (\r\n    <div className={styles.profileInfo}>\r\n      <div className={styles.user}>\r\n        <div className={styles.userAvatarAndFollow}>\r\n          <div>\r\n            <img src={props.profile.photos.large || photoDefault} className={styles.avatar} />\r\n          </div>\r\n          <div className={styles.buttonUnderAvatar}>\r\n            {props.profile.userId !== props.authId ?\r\n              BottonToggleFollow('ONE_USER', onToggleFollow, props.followed, props.isProgress, null) :\r\n              <button className={styles.buttonEditAvatar} onClick={onUploadMode}>Edit avatar</button>}\r\n          </div>\r\n        </div>\r\n        <div className={styles.info}>\r\n          <h4>{props.profile.fullName}</h4>\r\n          <p><ProfileStatus status={props.status} getUpdateSatus={props.getUpdateSatus}\r\n            getUserStatus={props.getUserStatus} authId={props.authId} userId={props.profile.userId} /></p>\r\n          <p><span>LookingForAJob:</span> {props.profile.lookingForAJob ? 'Yes' : 'No'}</p>\r\n          <p><span>LookingForAJobDescription:</span> {props.profile.lookingForAJobDescription}</p>\r\n          <p><span>About me:</span> {props.profile.aboutMe}</p>\r\n          <div className={styles.social}>\r\n            {props.profile.contacts.facebook ? <a href={props.profile.contacts.facebook}><i className=\"fab fa-facebook-square\"></i></a> : null}\r\n            {props.profile.contacts.website ? <a href={props.profile.contacts.website}><i className=\"far fa-window-restore\"></i></a> : null}\r\n            {props.profile.contacts.vk ? <a href={props.profile.contacts.vk}><i className=\"fab fa-vk\"></i></a> : null}\r\n            {props.profile.contacts.twitter ? <a href={props.profile.contacts.twitter}><i className=\"fab fa-twitter-square\"></i></a> : null}\r\n            {props.profile.contacts.instagram ? <a href={props.profile.contacts.instagram}><i className=\"fab fa-instagram\"></i></a> : null}\r\n            {props.profile.contacts.youtube ? <a href={props.profile.contacts.youtube}><i className=\"fab fa-youtube\"></i></a> : null}\r\n            {props.profile.contacts.github ? <a href={props.profile.contacts.github}><i className=\"fab fa-github-square\"></i></a> : null}\r\n            {props.profile.contacts.mainLink ? <a href={props.profile.contacts.mainLink}><i className=\"fas fa-external-link-square-alt\"></i></a> : null}\r\n          </div>\r\n          {props.profile.userId == props.authId ?\r\n            <div className={styles.editButton}>\r\n              <NavLink to='/edit'><button>Edit Profile</button></NavLink>\r\n            </div> : null}\r\n        </div>\r\n      </div>\r\n      <div className={uploadMode ? styles.popUpUploadAvatarContainer : styles.hidden} onClick={offUploadMode} data-click={'parent'}>\r\n        <div className={styles.popUpUploadAvatar}>\r\n          <input type='file' accept='image/*,image/jpeg' />\r\n          <button onClick={onUploadanAvatar}>–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport Loading from '../../../../common/loading/loading';\r\nimport photoDefault from '../../../../img/empty-avatar.png'\r\nimport styles from'./Post.module.css'\r\n\r\nconst Post = (props) => {\r\n  let onAddLike = () => {\r\n    let postLike = props;\r\n    props.addLike(postLike);\r\n  }\r\n  if (!props.profile) {\r\n    return <Loading />\r\n  }    \r\n  return(\r\n    <div className={styles.post}> \r\n      <img src={props.profile.photos.small||photoDefault} className={styles.avatar}/>\r\n      <p>{props.text}</p>\r\n      <i onClick={onAddLike} className=\"far fa-heart\"></i><span className={styles.likes}>{props.likes}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","export type ValidatorType = (value: string) => string | undefined;\r\n\r\nexport const required: ValidatorType = (value) => {\r\n    if (!value) return 'This field cannot be empty';\r\n    return undefined;\r\n}\r\n\r\nexport const maxLength = (max: number): ValidatorType => (value) => {\r\n    if (value && value.length > max) {\r\n        return `Must be ${max} characters or less`\r\n    }\r\n    else {\r\n        return undefined\r\n    }\r\n};\r\n\r\nexport const minLength = (min: number): ValidatorType => (value) => {\r\n    if (value && value.length < min) {\r\n        return `Must be at least ${min} characters `\r\n    } else {\r\n        return undefined;\r\n    }\r\n};\r\n\r\nexport const email = (value: string) => {\r\n    if (value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n        return 'Invalid email address'\r\n    } else {\r\n        return undefined\r\n    }\r\n}","import React from 'react'\r\nimport { WrappedFieldInputProps, WrappedFieldMetaProps} from 'redux-form';\r\nimport styles from './formsControls.module.css';\r\n\r\ntype PropsType = {\r\n    input: WrappedFieldInputProps,\r\n    meta: WrappedFieldMetaProps,\r\n    type: string,\r\n}\r\n\r\nexport const TextareaField: React.FC<PropsType> = ({ input, meta: { touched, error }, ...props }) => {\r\n    console.log({ input, meta: { touched, error }, ...props })\r\n    return (\r\n        <div className={touched && error && styles.error}>\r\n            <textarea {...input} {...props} />\r\n            {touched && error && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const inputField: React.FC<PropsType> = ({ input, type, meta: { touched, error }, ...props }) => {\r\n    return (\r\n        <div className={touched && error && styles.error}>\r\n            <input {...input} type={type}{...props} />\r\n            {touched && error && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport { maxLength } from '../../utils/validations/validation';\r\nimport { TextareaField } from './formsControls/formsControls'\r\nimport styles from './AddNewText.module.css';\r\n\r\nconst maxLength100 = maxLength(100)\r\nconst maxLength200 = maxLength(200)\r\n\r\ntype PropsType = {\r\n  name: string,\r\n  handleSubmit: () => void,\r\n  placeholder: string,\r\n  pristine: boolean,\r\n  submitting: boolean,\r\n  invalid: boolean,\r\n}\r\n\r\nconst FormAddNewText: React.FC<PropsType> = (props) => {\r\n\r\n  const validateCreactor = () => {\r\n    switch (props.name) {\r\n      case 'newPost':\r\n        return [maxLength200]\r\n      case 'newMessage':\r\n        return [maxLength100]\r\n    }\r\n  }\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n\r\n      <div>\r\n        <Field className={styles.inputText} name={props.name}\r\n          component={TextareaField} type=\"text\" placeholder={props.placeholder}\r\n          validate={validateCreactor()} />\r\n      </div>\r\n      <div className={styles.inputSubmit}>\r\n        <button disabled={props.pristine || props.submitting || props.invalid}>Send</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default FormAddNewText","import React from 'react';\r\nimport styles from './Posts.module.css';\r\nimport Post from './Post/Post';\r\nimport FormAddNewText from '../../../common/forms/AddNewText';\r\nimport { reduxForm } from 'redux-form';\r\nimport { PropsTypePosts } from './PostsContainer'\r\n\r\n\r\nconst Posts: React.FC<PropsTypePosts> = React.memo((props) => {\r\n\r\n  const ContactForm = reduxForm({\r\n    form: 'newPost'\r\n    //@ts-ignore\r\n  })(FormAddNewText);\r\n\r\n  const onSubmit = (value: {newPost: string}) => {\r\n    props.addPost(value.newPost)\r\n  }\r\n\r\n  let result = props.postsData.map(item => <Post key={item.id} text={item.text} likes={item.likes} addLike={props.addLike} profile={props.profile} />);\r\n  return (\r\n    <div className={styles.postsBlock}>\r\n      <div className={styles.createPost}>\r\n        <h3> My posts</h3>\r\n        {/* @ts-ignore */}\r\n        <ContactForm onSubmit={onSubmit} name={'newPost'} placeholder={'send new post'} />\r\n      </div>\r\n      <div className={styles.posts}>  \r\n        {result}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n)\r\nexport default Posts;","import { apiEditProfile, apiGetFollowUser, apiGetStatus, apiSetProfile, apitogglefollowUser, apiUpdateStatus, apiUploadAvatar } from \"../api/api\"\r\nimport { stopSubmit } from \"redux-form\"\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { AppStateType } from \"./reduxStore\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst ADD_LIKE = 'ADD_LIKE';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_FOLLOWED_USER = 'SET_FOLLOWED_USER';\r\nconst FOLLOWING_IN_PROGRESS = 'FOLLOWING_IN_PROGRESS';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst UPLOAD_AVATAR = 'UPLOAD_AVATAR';\r\nconst UPLOAD_PROFILE_INFO = 'UPLOAD_PROFILE_INFO';\r\n\r\ntype addPostActionType = {\r\n  type: typeof ADD_POST,\r\n  text: string\r\n}\r\ntype ClickPostType = {\r\n  addLike: () => void;\r\n  likes: number\r\n  profile: profileType\r\n  text: string\r\n}\r\ntype addLikeActionType = {\r\n  type: typeof ADD_LIKE,\r\n  clickPost: ClickPostType\r\n}\r\ntype setUserProfileActionType = {\r\n  type: typeof SET_USER_PROFILE,\r\n  userProfile: profileType\r\n}\r\ntype setFollowedUserActionType = {\r\n  type: typeof SET_FOLLOWED_USER,\r\n  followed: boolean\r\n}\r\ntype followingInProgressActionType = {\r\n  type: typeof FOLLOWING_IN_PROGRESS,\r\n  value: boolean\r\n}\r\ntype setStatusActionType = {\r\n  type: typeof SET_STATUS,\r\n  status: string\r\n}\r\ntype uploadAnAvatarActionType = {\r\n  type: typeof UPLOAD_AVATAR,\r\n  photo: photosProfileType\r\n}\r\ntype uploadProfileInfoActionType = {\r\n  type: typeof UPLOAD_PROFILE_INFO,\r\n  dataInfo: string\r\n}\r\n\r\ntype ProfileActionType = addPostActionType | addLikeActionType | setUserProfileActionType | setFollowedUserActionType |\r\n  followingInProgressActionType | setStatusActionType | uploadAnAvatarActionType | uploadProfileInfoActionType\r\n\r\nexport const addPostActionCreator = (text: string): addPostActionType => {\r\n  return {\r\n    type: ADD_POST,\r\n    text,\r\n  }\r\n}\r\nexport const addLikeActionCreator = (clickPost: ClickPostType): addLikeActionType => {\r\n  return {\r\n    type: ADD_LIKE,\r\n    clickPost,\r\n  }\r\n}\r\nexport const setUserProfileAC = (userProfile: profileType): setUserProfileActionType => {\r\n  return {\r\n    type: SET_USER_PROFILE,\r\n    userProfile\r\n  }\r\n}\r\nexport const setFollowedUserAC = (followed: boolean): setFollowedUserActionType => {\r\n  return {\r\n    type: SET_FOLLOWED_USER,\r\n    followed\r\n  }\r\n}\r\nexport const followingInProgressAC = (value: boolean): followingInProgressActionType => {\r\n  return {\r\n    type: FOLLOWING_IN_PROGRESS,\r\n    value,\r\n  }\r\n}\r\nexport const setStatusAC = (status: string): setStatusActionType => {\r\n  return {\r\n    type: SET_STATUS,\r\n    status,\r\n  }\r\n}\r\nexport const uploadAnAvatarAC = (photo: photosProfileType): uploadAnAvatarActionType => {\r\n  return {\r\n    type: UPLOAD_AVATAR,\r\n    photo\r\n  }\r\n}\r\nexport const uploadProfileInfo = (dataInfo: string): uploadProfileInfoActionType => {\r\n  return {\r\n    type: UPLOAD_PROFILE_INFO,\r\n    dataInfo\r\n  }\r\n}\r\n\r\nexport type postType = {\r\n  id: number,\r\n  text: string,\r\n  likes: number,\r\n  likeClick: number,\r\n}\r\ntype contactProfileType = {\r\n  github: string,\r\n  vk: string,\r\n  facebook: string,\r\n  instagram: string,\r\n  twitter: string,\r\n  website: string,\r\n  youtube: string,\r\n  mainLink: string\r\n}\r\n\r\nexport type photosProfileType = {\r\n  small: string,\r\n  large: string,\r\n}\r\n\r\nexport type profileType = {\r\n  userId: number,\r\n  lookingForAJob: boolean,\r\n  lookingForAJobDescription: string,\r\n  fullName: string,\r\n  aboutMe: string,\r\n  contacts: contactProfileType,\r\n  photos: photosProfileType\r\n}\r\n\r\ntype initialStateType = typeof initialState;\r\n\r\nlet initialState = {\r\n  posts: [\r\n    { id: 1, text: 'Hello! How are you?', likes: 3, likeClick: 0 },\r\n    { id: 2, text: 'My name is Kirill!', likes: 8, likeClick: 0 },\r\n    { id: 3, text: 'Good life', likes: 5, likeClick: 0 }\r\n  ] as Array<postType>,\r\n  profile: null as profileType | null,\r\n  followed: null as boolean | null,\r\n  followingInProgress: false as boolean,\r\n  status: \"\",\r\n\r\n};\r\n\r\nconst profileReducer = (state = initialState, action: ProfileActionType): initialStateType => {\r\n  let stateCopy;\r\n\r\n  switch (action.type) {\r\n    case SET_USER_PROFILE:\r\n      stateCopy = {\r\n        ...state,\r\n        profile: action.userProfile,\r\n      };\r\n      return stateCopy;\r\n    case ADD_POST:\r\n      stateCopy = {\r\n        ...state,\r\n        posts: [...state.posts],\r\n      };\r\n      let newId = stateCopy.posts.length + 1;\r\n      let newLikes = 0;\r\n      let newPost = {\r\n        id: newId,\r\n        text: action.text,\r\n        likes: newLikes,\r\n        likeClick: 0\r\n      };\r\n      stateCopy.posts.push(newPost);\r\n      return stateCopy;\r\n    case ADD_LIKE:\r\n      stateCopy = {\r\n        ...state,\r\n        posts: [...state.posts],\r\n      };\r\n      for (let k of stateCopy.posts) {\r\n        if (k.text == action.clickPost.text) {\r\n          if (k.likeClick == 0) {\r\n            k.likes += 1;\r\n            k.likeClick = 1;\r\n          } else {\r\n            k.likes -= 1;\r\n            k.likeClick = 0;\r\n          }\r\n        }\r\n      }\r\n      return stateCopy;\r\n    case SET_FOLLOWED_USER:\r\n      stateCopy = {\r\n        ...state,\r\n        followed: action.followed,\r\n      };\r\n      return stateCopy;\r\n    case FOLLOWING_IN_PROGRESS:\r\n      stateCopy = {\r\n        ...state,\r\n        followingInProgress: action.value\r\n      }\r\n      return stateCopy;\r\n    case SET_STATUS:\r\n      stateCopy = {\r\n        ...state,\r\n        status: action.status\r\n      }\r\n      return stateCopy;\r\n    case UPLOAD_AVATAR:\r\n      stateCopy = {\r\n        ...state,\r\n        profile: { ...state.profile, photos: action.photo } as profileType\r\n\r\n      }\r\n      return stateCopy;\r\n    case UPLOAD_PROFILE_INFO:\r\n      stateCopy = {\r\n        ...state,\r\n      }\r\n      return stateCopy\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\ntype ThunkUsersType = ThunkAction<void, AppStateType, unknown, ProfileActionType>;\r\n\r\nexport const setProfileTC = (userId: number): ThunkUsersType => async (dispatch) => {\r\n  let response = await apiSetProfile(userId)\r\n  if (response != undefined) {\r\n    debugger;\r\n    dispatch(setUserProfileAC(response))\r\n  }\r\n}\r\n\r\nexport const getFollowUserTC = (userId: number): ThunkUsersType => async (dispatch) => {\r\n  let response = await apiGetFollowUser(userId);\r\n  dispatch(setFollowedUserAC(response.data));\r\n}\r\n\r\nexport const togglefollowUserTC = (id: number, followed: boolean): ThunkUsersType => async (dispatch) => {\r\n  dispatch(followingInProgressAC(true));\r\n  let response = await apitogglefollowUser(id, followed);\r\n  if (response.status === 200) {\r\n    dispatch(setFollowedUserAC(!followed));\r\n    dispatch(followingInProgressAC(false));\r\n  }\r\n};\r\n\r\nexport const getUserStatusTC = (userId: number): ThunkUsersType => async (dispatch) => {\r\n  let response = await apiGetStatus(userId);\r\n  console.log(response)\r\n  if (response.status === 200) {\r\n    dispatch(setStatusAC(response.data))\r\n  }\r\n}\r\n\r\nexport const getUpdateSatusTC = (status: string): ThunkUsersType => async () => {\r\n  apiUpdateStatus(status);\r\n}\r\n\r\nexport const putAvatarToServerTC = (photo: string): ThunkUsersType => async (dispatch) => {\r\n  let response = await apiUploadAvatar(photo);\r\n  dispatch(uploadAnAvatarAC(response.data.data.photos))\r\n}\r\n\r\nexport const putProfileInfoTC = (dataInfo: string): ThunkUsersType => async (dispatch) => {\r\n  let response = await apiEditProfile(dataInfo);\r\n  if (response.data.resultCode === 0) {\r\n    alert('–£—Å–ø–µ—à–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ')\r\n  } else {\r\n    //@ts-ignore\r\n    dispatch(stopSubmit('editMode', { _error: response.data.messages[0] }))\r\n    alert('–ù–µ –≤—Å–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã')\r\n  }\r\n}\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport Posts from './Posts';\r\nimport { addPostActionCreator, addLikeActionCreator, profileType, postType } from '../../../redux/profileReducer';\r\nimport { connect } from 'react-redux';\r\nimport { AppStateType } from '../../../redux/reduxStore';\r\n\r\nexport type PropsTypePosts = {\r\n  postsData: postType[]\r\n  profile: profileType,\r\n  addPost: (newPost: string) => void,\r\n  addLike: () => void,\r\n}\r\n\r\nconst PostsContainer: React.FC<PropsTypePosts> = (props) => {\r\n\r\n  return (\r\n    <Posts {...props} />\r\n  )\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n  return {\r\n    postsData: state.profilePage.posts,\r\n    profile: state.profilePage.profile\r\n  }\r\n}\r\nlet mapDispatchToProps = {\r\n  addPost: addPostActionCreator,\r\n  addLike: addLikeActionCreator,\r\n}\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostsContainer);","import React from 'react';\r\nimport styles from './Profile.module.css'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport PostsContainer from './Posts/PostsContainer';\r\nimport { profileType } from '../../redux/profileReducer';\r\n\r\nexport type PropsTypeProfileInfo = {\r\n  profile: profileType,\r\n  followed: boolean,\r\n  isProgress: boolean,\r\n  status: string\r\n  authId: number,\r\n  setFollowedUser: () => void,\r\n  followingInProgress: () => void,\r\n  getUpdateSatus: () => void,\r\n  getUserStatus: (userId: number) => void,\r\n  togglefollowUser: (userId:number, followed:boolean) => void,\r\n  putAvatarToServer: (files: string) => void,\r\n}\r\n\r\nconst Profile: React.FC<PropsTypeProfileInfo> = (props) => {\r\n  return (\r\n    <div className={styles.main}>\r\n      <ProfileInfo  {...props} />\r\n      <PostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const withAuthRedirectComponent = (Component) => {\r\n\r\n    const RedidectComponent = (props) => {\r\n        if (props.isAuth === false) return <Redirect to={'/login'} />\r\n\r\n        return (\r\n            <Component {...props} />\r\n        )\r\n    }\r\n\r\n    const mapStateToProps = (state) => {\r\n        return {\r\n            isAuth: state.auth.isAuth\r\n        }\r\n    }\r\n\r\n    let connectedRedirectComponent = connect(mapStateToProps)(RedidectComponent);\r\n\r\n    return connectedRedirectComponent;\r\n}","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { followingInProgressAC, getFollowUserTC, getUpdateSatusTC, getUserStatusTC, profileType, putAvatarToServerTC, setFollowedUserAC, setProfileTC, setUserProfileAC, togglefollowUserTC } from '../../redux/profileReducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirectComponent } from '../hoc/withAuthRedirect';\r\nimport { AppStateType } from '../../redux/reduxStore';\r\n\r\ntype MatchType = {\r\n  isExact: boolean,\r\n  params: {userId: number}\r\n  path: string,\r\n  url: string,\r\n}\r\n\r\ntype PropsTypeProfile = {\r\n  profile: profileType,\r\n  followed: boolean,\r\n  isProgress: boolean,\r\n  status: string,\r\n  authId: number,\r\n  setProfile: (userId: number) => void;\r\n  getFollowUser: (userId: number) => void;\r\n  getUserStatus: (userId: number) => void;\r\n  setUserProfile: () => void,\r\n  setFollowedUser: () => void,\r\n  followingInProgress: () => void,\r\n  getUpdateSatus: () => void,\r\n  togglefollowUser: () => void,\r\n  putAvatarToServer: () => void,\r\n  match: MatchType\r\n}\r\n\r\nconst ProfileContainer: React.FC<PropsTypeProfile> = (props) => {\r\n  useEffect(() => {\r\n    console.log(props)\r\n    let userId = props.match.params.userId;\r\n    if (!userId) {\r\n      userId = props.authId;\r\n    }\r\n    props.setProfile(userId);\r\n    props.getFollowUser(userId);\r\n    props.getUserStatus(userId);\r\n  }, [props.match.params.userId])\r\n\r\n  return (<Profile profile={props.profile} followed={props.followed}\r\n    setFollowedUser={props.setFollowedUser} isProgress={props.isProgress}\r\n    followingInProgress={props.followingInProgress} status={props.status}\r\n    getUpdateSatus={props.getUpdateSatus} getUserStatus={props.getUserStatus}\r\n    authId={props.authId} togglefollowUser={props.togglefollowUser}\r\n    putAvatarToServer={props.putAvatarToServer} />\r\n  )\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    followed: state.profilePage.followed,\r\n    isProgress: state.profilePage.followingInProgress,\r\n    status: state.profilePage.status,\r\n    authId: state.auth.id\r\n  }\r\n}\r\nlet mapDispatchToProps = {\r\n  setUserProfile: setUserProfileAC,\r\n  setFollowedUser: setFollowedUserAC,\r\n  followingInProgress: followingInProgressAC,\r\n  setProfile: setProfileTC,\r\n  getFollowUser: getFollowUserTC,\r\n  getUserStatus: getUserStatusTC,\r\n  getUpdateSatus: getUpdateSatusTC,\r\n  togglefollowUser: togglefollowUserTC,\r\n  putAvatarToServer: putAvatarToServerTC\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirectComponent,\r\n  withRouter,\r\n)(ProfileContainer);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './User.module.css'\r\nimport { BottonToggleFollow } from '../../../common/toggleFollow/BottonToggleFollow';\r\n\r\ntype PropsType = {\r\n    name: string,\r\n    id: number,\r\n    followed: boolean,\r\n    avatar: string,\r\n    status: string | null,\r\n    isProgress: boolean,\r\n    togglefollowUser: (id: number, followed: boolean) => void,\r\n}\r\n\r\nconst User: React.FC<PropsType> = (props) => {\r\n    let onToggleFollow = () => {\r\n        props.togglefollowUser(props.id, props.followed);\r\n    }\r\n    return (\r\n        <div className={styles.user}>\r\n            <div className={styles.user_logo}>\r\n                <NavLink to={`/profile/${props.id}`}>\r\n                    <img src={props.avatar} alt=\"\" className={styles.avatar} />\r\n                </NavLink>\r\n                {BottonToggleFollow('ALL_USER', onToggleFollow, props.followed, props.isProgress, props.id)}\r\n            </div>\r\n            <div className={styles.user_info}>\r\n                <p className={styles.name}>{props.name}</p>\r\n                <p className={styles.status}>{props.status}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport styles from './Users.module.css'\r\nimport User from './User/User';\r\nimport photoDefault from '../../img/empty-avatar.png'\r\nimport ReactPaginate from 'react-paginate';\r\nimport Loading from '../../common/loading/loading';\r\nimport { usersType } from '../../redux/usersReducer';\r\n\r\ntype PropsType = {\r\n    getActivePage: (value: number) => void,\r\n    setCountUsers: (value: string) => void,\r\n    users: Array<usersType>,\r\n    totalUsersCount: number,\r\n    pageSize: number,\r\n    isFetching: boolean,\r\n    addFriend: () => void,\r\n    isProgress: boolean,\r\n    togglefollowUser: () => void,\r\n}\r\n\r\nconst Users: React.FC<PropsType> = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let arrPages = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        arrPages.push(i);\r\n    }\r\n    let userDate = props.users.map((item) => {\r\n        return <User name={item.name} key={item.id} id={item.id}\r\n            followed={item.followed} avatar={item.photos.small || photoDefault}\r\n            status={item.status} isProgress={props.isProgress} togglefollowUser={props.togglefollowUser} />\r\n    });\r\n    return (\r\n        <div className={styles.users}>\r\n            <h3 className={styles.tittle}>Users</h3>\r\n            <div className={styles.paginationContainer}>\r\n                {props.isFetching ? <Loading /> : null}\r\n                <div className={styles.commentBox}>\r\n                    <ReactPaginate\r\n                        previousLabel={<i className=\"fas fa-angle-double-left\"></i>}\r\n                        nextLabel={<i className=\"fas fa-angle-double-right\"></i>}\r\n                        breakLabel={'...'}\r\n                        breakClassName={'break-me'}\r\n                        pageCount={pagesCount}\r\n                        marginPagesDisplayed={2}\r\n                        pageRangeDisplayed={3}\r\n                        onPageChange={(e) => { props.getActivePage(e.selected + 1) }}\r\n                        containerClassName={styles.pagination}\r\n                        //@ts-ignore\r\n                        subContainerClassName={'pages pagination'}\r\n                        activeClassName={styles.activePage}\r\n                    />\r\n                </div>\r\n                <div className=\"lds-hourglass\"></div>\r\n                <select className={styles.select} onChange={(e) => { props.setCountUsers(e.target.value) }}>\r\n                    <option value='10'>10</option>\r\n                    <option value='25'>25</option>\r\n                    <option value='50'>50</option>\r\n                </select>\r\n            </div>\r\n            <div className={styles.usersList}>\r\n                {userDate}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import { ThunkAction } from \"redux-thunk\";\r\nimport { apiGetUsers, apitogglefollowUser } from \"../api/api\"\r\nimport { AppStateType, InferActionsType } from \"./reduxStore\";\r\n\r\nconst TOGGLE_FOLLOW = 'TOGGLE_FOLLOW';\r\nconst SET_USERS = 'SET_USER';\r\nconst SET_PAGE = 'SET_PAGE';\r\nconst SET_COUNT_USERS = 'SET_COUNT_USERS';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst FOLLOWING_IN_PROGRESS = 'FOLLOWING_IN_PROGRESS';\r\n\r\ntype toogleFollowTActionType = {\r\n  type: typeof TOGGLE_FOLLOW,\r\n  id: number,\r\n  followed: boolean\r\n}\r\ntype setUsersActionType = {\r\n  type: typeof SET_USERS,\r\n  users: Array<usersType>,\r\n  totalCount: number\r\n}\r\ntype setPageActionType = {\r\n  type: typeof SET_PAGE,\r\n  clickPage: number\r\n}\r\ntype setCountUsersActionType = {\r\n  type: typeof SET_COUNT_USERS,\r\n  count: number\r\n}\r\ntype toggleIfFetchingActionType = {\r\n  type: typeof TOGGLE_IS_FETCHING,\r\n  isFetching: boolean\r\n}\r\ntype followingInProgressActionType = {\r\n  type: typeof FOLLOWING_IN_PROGRESS,\r\n  id: number,\r\n  value: boolean\r\n\r\n}\r\ntype ActionUsersTypes = InferActionsType<typeof actions>\r\n\r\n\r\nconst actions = {\r\n  toggleFollowAC: (id: number, followed: boolean) => ({ type: TOGGLE_FOLLOW, id, followed } as const),\r\n  setUsersAC: (users: Array<usersType>, totalCount: number) => ({ type: SET_USERS, users, totalCount } as const),\r\n  setPageAC: (clickPage: number) => ({ type: SET_PAGE, clickPage } as const),\r\n  setCountUsersAC: (count: number) => ({ type: SET_COUNT_USERS, count } as const),\r\n  toggleIfFetchingAC: (isFetching: boolean) => ({ type: TOGGLE_IS_FETCHING, isFetching } as const),\r\n  followingInProgressAC: (id: number, value: boolean) => ({ type: FOLLOWING_IN_PROGRESS, id, value } as const),\r\n}\r\n\r\nexport type usersType = {\r\n  followed: boolean,\r\n  id: number,\r\n  name: string,\r\n  photos: { small: string | null, large: string | null }\r\n  status: null | string\r\n  uniqueUrlName: string | null\r\n}\r\n\r\ntype initialStateType = typeof initialState;\r\n\r\nlet initialState = {\r\n  users: [] as Array<usersType>,\r\n  pageSize: 10,\r\n  totalUsersCount: 0,\r\n  activePage: 1,\r\n  isFetching: false,\r\n  followingInProgress: [] as Array<usersType>,\r\n};\r\n\r\nconst UsersReducer = (state = initialState, action: ActionUsersTypes): initialStateType => {\r\n  let stateCopy;\r\n\r\n  switch (action.type) {\r\n    case TOGGLE_FOLLOW:\r\n      stateCopy = {\r\n        ...state,\r\n        users: [...state.users]\r\n      };\r\n      for (let k of stateCopy.users) {\r\n        if (k.id == action.id) {\r\n          (action.followed == true) ? k.followed = false : k.followed = true;\r\n        }\r\n      }\r\n      return stateCopy;\r\n    case FOLLOWING_IN_PROGRESS:\r\n      let arr;\r\n      if (action.value == false) {\r\n        arr = state.followingInProgress.filter((item) => {\r\n          //@ts-ignore\r\n          return item != action.id\r\n        })\r\n      } else {\r\n        arr = [...state.followingInProgress, action.id]\r\n      }\r\n      stateCopy = {\r\n        ...state,\r\n        followingInProgress: arr,\r\n      }\r\n      //@ts-ignore\r\n      return stateCopy;\r\n    case SET_USERS:\r\n      stateCopy = {\r\n        ...state,\r\n        users: action.users,\r\n        totalUsersCount: action.totalCount,\r\n      }\r\n      //@ts-ignore\r\n      return stateCopy;\r\n    case SET_PAGE:\r\n      stateCopy = {\r\n        ...state,\r\n        activePage: action.clickPage,\r\n      }\r\n      return stateCopy;\r\n    case SET_COUNT_USERS:\r\n      stateCopy = {\r\n        ...state,\r\n        pageSize: action.count,\r\n      }\r\n      return stateCopy;\r\n    case TOGGLE_IS_FETCHING:\r\n      stateCopy = {\r\n        ...state,\r\n        isFetching: action.isFetching\r\n      }\r\n      return stateCopy;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\ntype ThunkUsersType = ThunkAction<void, AppStateType, unknown, ActionUsersTypes>\r\n\r\n\r\nexport const getUsersTC = (pageSize: number, activePage: number): ThunkUsersType => {\r\n  return (\r\n    async (dispatch) => {\r\n      dispatch(actions.toggleIfFetchingAC(true));\r\n      let response = await apiGetUsers(pageSize, activePage);\r\n      dispatch(actions.setUsersAC(response.items, response.totalCount));\r\n      dispatch(actions.toggleIfFetchingAC(false));\r\n    }\r\n  )\r\n}\r\n\r\nexport const getActivePageTC = (pageSize: number, page: number): ThunkUsersType =>\r\n  (dispatch) => {\r\n    dispatch(actions.setPageAC(page));\r\n    dispatch(getUsersTC(pageSize, page));\r\n  };\r\n\r\nexport const setCountUserTC = (value: number, activePage: number): ThunkUsersType =>\r\n  (dispatch) => {\r\n    dispatch(actions.setCountUsersAC(value));\r\n    dispatch(getUsersTC(value, activePage));\r\n  };\r\n\r\nexport const togglefollowUserTC = (id: number, followed: boolean): ThunkUsersType =>\r\n  async (dispatch) => {\r\n    dispatch(actions.followingInProgressAC(id, true));\r\n    let response = await apitogglefollowUser(id, followed);\r\n    if (response.status === 200) {\r\n      dispatch(actions.toggleFollowAC(id, followed));\r\n      dispatch(actions.followingInProgressAC(id, false));\r\n    }\r\n  };\r\n\r\nexport default UsersReducer;","\r\nconst ADD_MESSAGE = 'ADD_MESSAGE';\r\nconst ADD_FRIEND = 'ADD_FRIEND';\r\n\r\ntype addMessageActionType = {\r\n  type: typeof ADD_MESSAGE,\r\n  text: string,\r\n  id: number\r\n}\r\ntype addFriendActionType = {\r\n  type: typeof ADD_FRIEND,\r\n  id: number,\r\n  avatar: string,\r\n  name: string\r\n}\r\n\r\ntype friendsReducerType = addMessageActionType | addFriendActionType;\r\n\r\nexport const addMessageActionCreator = (text:string, id:number):addMessageActionType => {\r\n  return {\r\n    type: ADD_MESSAGE,\r\n    text,\r\n    id,\r\n  }\r\n}\r\nexport const addFriendAC = (id:number, avatar:string, name:string):addFriendActionType => {\r\n  return {\r\n    type: ADD_FRIEND,\r\n    id,\r\n    avatar,\r\n    name\r\n  }\r\n}\r\n\r\nexport type friendsType = {\r\n  id: number,\r\n  name: string,\r\n  avatar: string,\r\n}\r\nexport type messagesType = {\r\n  id: number,\r\n  name: string,\r\n  text: string\r\n}\r\nexport type initialStateFriendsType = typeof initialState;\r\n\r\nlet initialState = {\r\n  friends: [{id:1, name:'kirill'}\r\n  ] as Array<friendsType>,\r\n\r\n  messages: {\r\n    1: [\r\n      { id: 1, name: 'Andrey', text: 'Hello!' },\r\n      { id: 2, name: 'Me', text: 'Hi!' },\r\n      { id: 3, name: 'Andrey', text: 'How are you?' },\r\n      { id: 4, name: 'Me', text: 'I`m ok, and you?' },\r\n      { id: 5, name: 'Andrey', text: 'I`m fine!' }\r\n    ] as Array<messagesType>\r\n  }\r\n};\r\n\r\nconst friendsReducer = (state = initialState, action:friendsReducerType ):initialStateFriendsType => {\r\n  let stateCopy;\r\n\r\n  switch (action.type) {\r\n    case ADD_MESSAGE:\r\n      stateCopy = {\r\n        ...state,\r\n        messages: { ...state.messages },\r\n      };\r\n      //@ts-ignore\r\n      let newId = stateCopy.messages[action.id].length + 1;\r\n      let newMessage = {\r\n        id: newId,\r\n        name: 'Me',\r\n        text: action.text,\r\n      };\r\n      //@ts-ignore\r\n      stateCopy.messages[action.id].push(newMessage);\r\n      return stateCopy;\r\n    case ADD_FRIEND:\r\n      let newFriend = {\r\n        id: action.id,\r\n        name: action.name,\r\n        avatar: action.avatar\r\n      }\r\n      stateCopy = {\r\n        ...state,\r\n      };\r\n      stateCopy.friends.push(newFriend);\r\n\r\n      return stateCopy;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default friendsReducer;","import { createSelector } from \"reselect\"\r\nimport { AppStateType } from \"./reduxStore\"\r\n\r\nexport const getUsers = (state: AppStateType) => {\r\n    return state.allUsers.users\r\n}\r\nexport const getUsersSuperCreateSelectorTEST = createSelector(getUsers, (users) => {\r\n    return users.filter(u => true)\r\n})\r\n\r\nexport const getUsersPageSize = (state: AppStateType) => {\r\n    return state.allUsers.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.allUsers.totalUsersCount\r\n}\r\nexport const getActivePage = (state: AppStateType) => {\r\n    return state.allUsers.activePage\r\n}\r\nexport const getFetching = (state: AppStateType) => {\r\n    return state.allUsers.isFetching\r\n}\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.allUsers.followingInProgress\r\n}","import React from 'react';\r\nimport Users from './Users';\r\nimport { connect } from 'react-redux';\r\nimport { getUsersTC, setCountUserTC, getActivePageTC, togglefollowUserTC } from '../../redux/usersReducer';\r\nimport { addFriendAC } from '../../redux/friendsReducer';\r\nimport { getFetching, getActivePage, getTotalUsersCount, getUsersPageSize, getFollowingInProgress, getUsersSuperCreateSelectorTEST } from '../../redux/users-selectors';\r\nimport { usersType } from '../../redux/usersReducer';\r\nimport { AppStateType } from '../../redux/reduxStore';\r\n\r\n\r\ntype PropsType = {\r\n    users: Array<usersType>,\r\n    pageSize: number,\r\n    totalUsersCount: number,\r\n    activePage: number,\r\n    isFetching: boolean,\r\n    isProgress: boolean,\r\n    getUsers: (pageSize: number, activePage: number) => void,\r\n    getActivePage: (pageSize: number, page: number) => void,\r\n    setCountUser: (value: string, activePage: number) => void,\r\n    setCountUsers: () => void,\r\n    addFriend: () => void,\r\n    togglefollowUser: () => void\r\n}\r\n\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.pageSize, this.props.activePage);\r\n    }\r\n    getActivePage = (page: number) => {\r\n        this.props.getActivePage(this.props.pageSize, page);\r\n    }\r\n    setCountUsers = (value: string) => {\r\n        console.log(value);\r\n        this.props.setCountUser(value, this.props.activePage);\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <Users getActivePage={this.getActivePage}\r\n                setCountUsers={this.setCountUsers}\r\n                users={this.props.users}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                isFetching={this.props.isFetching}\r\n                addFriend={this.props.addFriend}\r\n                isProgress={this.props.isProgress}\r\n                togglefollowUser={this.props.togglefollowUser} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        users: getUsersSuperCreateSelectorTEST(state),\r\n        pageSize: getUsersPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        activePage: getActivePage(state),\r\n        isFetching: getFetching(state),\r\n        isProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\nlet mapDispatchToProps = {\r\n    setCountUsers: setCountUserTC,\r\n    addFriend: addFriendAC,\r\n    getUsers: getUsersTC,\r\n    getActivePage: getActivePageTC,\r\n    setCountUser: setCountUserTC,\r\n    togglefollowUser: togglefollowUserTC\r\n}\r\n\r\n//@ts-ignore\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);","import React from 'react';\r\nimport styles from './Dialog.module.css';\r\n\r\ntype PropsType = {\r\n  img: string,\r\n  name: string,\r\n  text: string,\r\n}\r\n\r\nconst Dialog: React.FC<PropsType> = (props) => {\r\n  return (\r\n    <div className={styles.dialog}>\r\n      <img src={props.img} className={styles.avatar} />\r\n      <div>\r\n        <p className={styles.name}>{props.name}</p>\r\n        <p className={styles.message}>{props.text}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialog;","import React from 'react';\r\nimport styles from './DialogMe.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ntype PropsType = {\r\n  name: string,\r\n  text: string,\r\n}\r\n\r\nconst DialogMe: React.FC<PropsType> = ({name, text}) => {\r\n    return (\r\n      <div className={styles.dialog}>\r\n        <div>\r\n          <p className={styles.name}>{name}</p>\r\n          <p className={styles.message}>{text}</p>\r\n        </div>\r\n        <NavLink to='/profile'><img src='https://clraik.com/forum/customavatars/avatar14341_15.gif' className={styles.avatar}/></NavLink>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default DialogMe;","import React from 'react';\r\nimport styles from './DialogueWindow.module.css';\r\nimport Dialog from '../Dialog/Dialog';\r\nimport DialogMe from '../DialogMe/DialogMe';\r\nimport FormAddNewText from '../../../common/forms/AddNewText';\r\nimport { reduxForm } from 'redux-form';\r\nimport { messagesType } from '../../../redux/friendsReducer';\r\n\r\ntype FormDataType = {\r\n    newMessage: string,\r\n    password: string\r\n}\r\n\r\ntype PropsType = {\r\n    addMessage: (message: string, id: number) => void,\r\n    messages: null| Array<messagesType>,\r\n    img: string,\r\n    id: number,\r\n}\r\n\r\nconst DialogueWindow: React.FC<PropsType> = (props) => {\r\n    const ContactForm = reduxForm({\r\n        form: 'newMessage'\r\n        //@ts-ignore\r\n    })(FormAddNewText);\r\n\r\n    const onSubmit = (formData:FormDataType) => {\r\n        props.addMessage(formData.newMessage, props.id)\r\n\r\n    }\r\n    //@ts-ignore\r\n    let dialog = props.messages[props.id].map(item => {\r\n        return (item.name !== 'Me') ?\r\n            <Dialog key={item.id} name={item.name} text={item.text} img={props.img} /> : <DialogMe key={item.id} name={item.name} text={item.text} />\r\n    });\r\n\r\n    return (\r\n        <div className={styles.allMessages}>\r\n            {dialog}\r\n            <div className={styles.chatInput}> \r\n            {/* @ts-ignore */}\r\n                <ContactForm onSubmit={onSubmit} name={'newMessage'} placeholder={'send new message'} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogueWindow;","import React from 'react';\r\nimport styles from './DialogWithPerson.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ntype PropsType = {\r\n  id: number,\r\n  img: string,\r\n  name: string\r\n}\r\n\r\nconst DialogWithPerson: React.FC<PropsType> = (props) => {\r\n  return (\r\n    <li>\r\n      <NavLink activeClassName={styles.active} to={'/messages/' + props.id}>\r\n        <div className={styles.person}>\r\n          <img className={styles.avatar} src={props.img} alt=\"\" />\r\n          <span>{props.name}</span>\r\n        </div>\r\n      </NavLink>\r\n    </li>\r\n  )\r\n\r\n}\r\nexport default DialogWithPerson;","import React from 'react';\r\nimport styles from './Messages.module.css';\r\nimport DialogueWindow from './DialogueWindow/DialogueWindow';\r\nimport { Route } from 'react-router-dom';\r\nimport DialogWithPerson from './DialogWithPerson/DialogWithPerson';\r\nimport { initialStateFriendsType } from '../../redux/friendsReducer';\r\n\r\ntype PropsType = {\r\n  friendsPage: initialStateFriendsType,\r\n  addMessage: () => void,\r\n}\r\n\r\nconst Messages:React.FC<PropsType> = (props) => {\r\n  console.log(props)\r\n  let interlocutorName = props.friendsPage.friends.map(item => <DialogWithPerson key={item.id} name={item.name} id={item.id} img={item.avatar}/>);\r\n  \r\n  let dialogWindowName = interlocutorName.map((item) => {\r\n    // @ts-ignore\r\n    return <Route path={`/messages/${item.props.id}`}><DialogueWindow key={item.props.id} messages={props.friendsPage.messages} \r\n    id={item.props.id} img={item.props.img} addMessage={props.addMessage}/></Route>\r\n  });\r\n\r\n  return (\r\n      <div>\r\n        <h4 className={styles.headline}>Messages</h4>\r\n        <div className={styles.messages}>\r\n            <ul className={styles.dialogs}>\r\n                {interlocutorName}\r\n            </ul>\r\n            {dialogWindowName}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Messages;","import React from 'react';\r\nimport Messages from './Messages';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirectComponent } from '../hoc/withAuthRedirect';\r\nimport { addMessageActionCreator, initialStateFriendsType } from '../../redux/friendsReducer';\r\nimport { compose } from 'redux';\r\nimport { AppStateType } from '../../redux/reduxStore';\r\n\r\ntype PropsType = {\r\n  friendsPage: initialStateFriendsType,\r\n  addMessage: () => void\r\n}\r\n\r\nconst MessagesContainer: React.FC<PropsType> = (props) => {\r\n\r\n  return (\r\n  <Messages {...props}/>\r\n  )\r\n}\r\n\r\nlet mapStateToProps = (state:AppStateType) => {\r\n  return {\r\n    friendsPage: state.friendsPage,\r\n  }\r\n}\r\n\r\nlet mapDispatcherToProps =  {\r\n    addMessage: addMessageActionCreator\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatcherToProps),\r\n  withAuthRedirectComponent,\r\n)(MessagesContainer);","import React from 'react';\r\n\r\nconst News = () => {\r\n    return(\r\n      <div>\r\n        News\r\n      </div>\r\n    )\r\n  }\r\n  \r\nexport default News;","import React from 'react';\r\nimport ReactAudioPlayer from 'react-audio-player';\r\nimport styles from './Music.module.css'\r\n\r\nconst Music = () => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <h3>Music</h3>\r\n      <ReactAudioPlayer\r\n        src=\"my_audio_file.ogg\"\r\n        autoPlay\r\n        controls\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\n\r\nconst Settings = () => {\r\n    return(\r\n      <div>\r\n        Settings\r\n      </div>\r\n    )\r\n  }\r\n  \r\nexport default Settings;","import React from 'react';\r\nimport styles from './Friend.module.css'\r\n\r\ntype PropsType = {\r\n  avatar: string,\r\n  name: string\r\n}\r\n\r\nconst Friend: React.FC<PropsType> = ({ avatar, name }) => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <img className={styles.avatar} src={avatar} />\r\n      <p>{name}</p>\r\n    </div>\r\n  )\r\n}\r\nexport default Friend;","import React from 'react';\r\nimport styles from './FriendList.module.css'\r\nimport Friend from './Friend/Friend';\r\nimport Slider from \"react-slick\";\r\nimport { friendsType } from '../../../redux/friendsReducer';\r\n\r\ntype PropsType = {\r\n  friends: Array<friendsType>,\r\n}\r\n\r\nconst FriendList: React.FC<PropsType> = ({friends}) => {\r\n  let friendsList = friends.map( (item:friendsType) => {\r\n    return <Friend key={item.id} avatar={item.avatar} name={item.name} />\r\n  });\r\n\r\n  let settings = {\r\n    infinite: true,\r\n    speed: 500,\r\n    autoplay: true,\r\n    autoplaySpeed: 3000,\r\n    slidesToShow: 2,\r\n    slidesToScroll: 1,\r\n    rows: 2\r\n  };  \r\n\r\n  return (\r\n    <div className={styles.friendsList}>\r\n      <p>Friend</p>\r\n        <Slider className={styles.friendsWindow} {...settings}>\r\n          {friendsList}\r\n        </Slider>\r\n    </div>\r\n  )\r\n}\r\nexport default FriendList;","import React from 'react';\r\nimport styles from './LeftMenu.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\nimport FriendList from './FriendList/FriendList';\r\n//@ts-ignore\r\nimport logo from '../../img/logo2.PNG';\r\nimport { friendsType } from '../../redux/friendsReducer';\r\n\r\ntype PorpsType = {\r\n  friends: Array<friendsType>\r\n}\r\n\r\nconst LeftMenu: React.FC<PorpsType> = ({friends}) => {\r\n  return (\r\n    <div className={styles.leftMenu}>\r\n      <div className={styles.logo}>\r\n        <img src={logo} alt=\"\"/>\r\n      </div>\r\n      <ul className={styles.menu}>\r\n        <li><NavLink to='/profile' activeClassName={styles.active}>\r\n          <i className=\"far fa-user-circle\"></i>\r\n          <span>Profile</span>\r\n        </NavLink></li>\r\n        <li><NavLink to='/messages' activeClassName={styles.active}>\r\n          <i className=\"far fa-comments\"></i>\r\n          <span>Messages</span>\r\n        </NavLink></li>\r\n        <li><NavLink to='/news' activeClassName={styles.active}>\r\n          <i className=\"far fa-newspaper\"></i>\r\n          <span>News</span>\r\n        </NavLink></li>\r\n        <li><NavLink to='/music' activeClassName={styles.active}>\r\n          <i className=\"far fa-play-circle\"></i>\r\n          <span>Music</span>\r\n        </NavLink></li>\r\n        <li><NavLink to='/settings' activeClassName={styles.active}>\r\n          <i className=\"fas fa-cogs\"></i>\r\n          <span>Settings</span>\r\n        </NavLink></li>\r\n        <li><NavLink to='/users' activeClassName={styles.active}>\r\n          <i className=\"fas fa-users\"></i>\r\n          <span>Find Users</span>\r\n        </NavLink></li>\r\n      </ul>\r\n      <FriendList friends={friends} />\r\n    </div>\r\n  )\r\n}\r\nexport default LeftMenu;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport LeftMenu from './LeftMenu';\r\nimport { friendsType } from '../../redux/friendsReducer';\r\nimport { AppStateType } from '../../redux/reduxStore';\r\n\r\ntype PropsType = {\r\n  friends: Array<friendsType>\r\n}\r\n\r\nclass LeftMenuContainer extends React.Component<PropsType> {\r\n\r\n  render() {\r\n    return (\r\n      <LeftMenu friends={this.props.friends} />\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n  return {\r\n    friends: state.friendsPage.friends,\r\n  }\r\n}\r\n//@ts-ignore\r\nexport default connect(mapStateToProps)(LeftMenuContainer);\r\n\r\n","import React from 'react';\r\nimport styles from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ntype PropsType = {\r\n  logoutAccount: () => void\r\n}\r\n\r\nconst Header: React.FC<PropsType> = ({logoutAccount}) => {\r\n  console.log(logoutAccount)\r\n    return (\r\n      <div className={styles.header}>\r\n          <p></p>\r\n          <button onClick={logoutAccount} className={styles.button}><i className=\"fas fa-sign-out-alt\"></i></button>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Header;","import { apiAuth, apiCaptcha, apiLogin, apiLogout, AuthMeType, ResultCodesEnum } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { AppStateType } from \"./reduxStore\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst SET_CAPTCHA = 'SET_CAPTCHA';\r\nconst SET_LOGIN = 'SET_LOGIN';\r\n\r\ntype dataUserType = {\r\n  id: number,\r\n  login: string,\r\n  email: string\r\n}\r\n\r\ntype setUserActionType = {\r\n  type: typeof SET_USER_DATA,\r\n  data: dataUserType | null,\r\n  isAuth: boolean\r\n}\r\ntype toggleIfFetchingActionType = {\r\n  type: typeof TOGGLE_IS_FETCHING,\r\n  isFetching: boolean\r\n}\r\ntype setCaptchaActionType = {\r\n  type: typeof SET_CAPTCHA,\r\n  url: string\r\n}\r\ntype setLoginActionType = {\r\n  type: typeof SET_LOGIN,\r\n  login: string,\r\n  password: number,\r\n  remember: boolean\r\n}\r\n\r\ntype authReducedActuonType = setUserActionType | toggleIfFetchingActionType | setCaptchaActionType | setLoginActionType;\r\n\r\nexport const setUserDataAC = (data:dataUserType | null, isAuth:boolean):setUserActionType => {\r\n  return {\r\n    type: SET_USER_DATA,\r\n    data,\r\n    isAuth\r\n  }\r\n}\r\nexport const toggleIfFetchingAC = (isFetching:boolean): toggleIfFetchingActionType => {\r\n  return {\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n  }\r\n}\r\nexport const setCaptchaAC = (url:string): setCaptchaActionType => {\r\n  return {\r\n    type: SET_CAPTCHA,\r\n    url\r\n  }\r\n}\r\nexport const setLoginAC = (login:string, password:number, remember:boolean): setLoginActionType => {\r\n  return {\r\n    type: SET_LOGIN,\r\n    login,\r\n    password,\r\n    remember\r\n  }\r\n}\r\n\r\nexport type initalStateAuthType = {\r\n  email: string | null,\r\n  id: number | null,\r\n  login: string | null,\r\n  isFetching: boolean,\r\n  isAuth: boolean,\r\n  captchaUrl: string | null\r\n}\r\n\r\nlet initialState: initalStateAuthType = {\r\n  email: null,\r\n  id: null,\r\n  login: null,\r\n  isFetching: false,\r\n  isAuth: false,\r\n  captchaUrl: null\r\n};\r\n\r\nconst AuthReducer = (state = initialState, action: authReducedActuonType): initalStateAuthType => {\r\n  let stateCopy;\r\n\r\n  switch (action.type) {\r\n    case \"SET_USER_DATA\":\r\n      stateCopy = {\r\n        ...state,\r\n        ...action.data,\r\n        isAuth: action.isAuth\r\n      };\r\n      return stateCopy;\r\n    case 'TOGGLE_IS_FETCHING':\r\n      stateCopy = {\r\n        ...state,\r\n        isFetching: action.isFetching\r\n      }\r\n      return stateCopy;\r\n    case 'SET_LOGIN':\r\n      stateCopy = {\r\n        ...state,\r\n      };\r\n      return stateCopy;\r\n    case 'SET_CAPTCHA':\r\n      stateCopy = {\r\n        ...state,\r\n        captchaUrl: action.url\r\n      };\r\n      console.log(stateCopy);\r\n      return stateCopy;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\ntype ThunkUsersType = ThunkAction<void, AppStateType, unknown, authReducedActuonType>;\r\n\r\nexport type FormDataType = {\r\n  email: string,\r\n  password: string,\r\n  rememberMe: boolean,\r\n  captcha: boolean\r\n}\r\n\r\nexport const authorizationTC = ():ThunkUsersType => async (dispatch) => {\r\n  let response = await apiAuth()\r\n  if (response.resultCode === ResultCodesEnum.Success) {\r\n    dispatch(setUserDataAC(response.data, true));\r\n  };\r\n};\r\n\r\n\r\nexport const accountLoginTC = (objData: FormDataType):ThunkUsersType => async (dispatch) => {\r\n  try {\r\n    let response = await apiLogin(objData);\r\n\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(authorizationTC());\r\n      alert('–í—ã –≤–æ—à–ª–∏')\r\n    } else {\r\n      if (response.data.resultCode === 10) {\r\n        let response = await apiCaptcha();\r\n        dispatch(setCaptchaAC(response.url))\r\n      }\r\n      //@ts-ignore\r\n      dispatch(stopSubmit('login', { _error: response.data.messages[0] }))\r\n    }\r\n  } catch (err) {\r\n    //@ts-ignore\r\n    dispatch(stopSubmit('login', { _error: 'server error' }))\r\n  }\r\n}\r\n\r\nexport const logoutAccountTC = ():ThunkUsersType => async (dispatch) => {\r\n  let response = await apiLogout();\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setUserDataAC(null, false));\r\n    alert('–í—ã –≤—ã—à–ª–∏')\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default AuthReducer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport { logoutAccountTC } from '../../redux/authReducer';\r\nimport { AppStateType } from '../../redux/reduxStore';\r\n\r\ntype PropsType = {\r\n  logoutAccount: () => void\r\n}\r\n\r\nclass HeaderContainer extends React.Component<PropsType> {\r\n\r\n  render() {\r\n    return (<Header logoutAccount={this.props.logoutAccount} />)\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n  return {\r\n\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = {\r\n  logoutAccount: logoutAccountTC\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer);","import React from 'react'\r\nimport { Field, InjectedFormProps } from 'redux-form';\r\nimport styles from './Login.module.css'\r\nimport { inputField } from '../../common/forms/formsControls/formsControls';\r\nimport { minLength, maxLength, required, email } from '../../utils/validations/validation';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { FormDataType } from '../../redux/authReducer';\r\n\r\nconst minLength6 = minLength(6);\r\nconst maxLength30 = maxLength(30);\r\n\r\ntype PropsType = {\r\n    isAuth: boolean,\r\n    captcha: string | null,\r\n}\r\n\r\nconst Login:React.FC<InjectedFormProps<FormDataType, PropsType> & PropsType> = ({isAuth, handleSubmit, error, captcha, pristine, submitting, invalid}) => {\r\n    if (isAuth == false) {\r\n        return (\r\n            <div className={styles.container}>\r\n                <div className={styles.containerLoginForm}>\r\n                <p className={styles.tittle}>Login to social network</p>\r\n                    <form onSubmit={handleSubmit} className={styles.loginForm}>\r\n                        <div>\r\n                            <Field className={styles.inputField} name={\"email\"} component={inputField} type=\"text\" placeholder=\"email\"\r\n                                validate={[required, email]} />\r\n                        </div>\r\n                        <div>\r\n                            <Field className={styles.inputField} name=\"password\" component={inputField} type=\"password\" placeholder=\"password\"\r\n                                validate={[required, maxLength30, minLength6]} />\r\n\r\n                        </div>\r\n                        <div className={styles.rememberCheckbox}>\r\n                            <Field name=\"remember\" component={inputField} type=\"checkbox\" /> <span> Remember me </span>\r\n                        </div>\r\n                        {error && <div className={styles.error}>\r\n                            {error}\r\n                        </div>}\r\n                        {captcha &&\r\n                            <div>\r\n                                <div><img src={captcha} className={styles.captcha} alt=\"\" /></div>\r\n                                <div>\r\n                                    <Field name=\"captcha\" component={inputField} type=\"text\" />\r\n                                </div>\r\n                            </div>}\r\n                        <div className={styles.submitContainer}>\r\n                            <button className={styles.submit} type=\"submit\" disabled={pristine || submitting || invalid}>Login</button>\r\n                        </div>\r\n                    </form>\r\n                </div> \r\n            </div>\r\n        )\r\n    } else {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n}\r\n\r\nexport default Login","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm } from 'redux-form';\r\nimport { accountLoginTC, FormDataType } from '../../redux/authReducer';\r\nimport { AppStateType } from '../../redux/reduxStore';\r\nimport Login from \"./Login\";\r\n\r\ntype PropsTypeLoginContainer = {\r\n    isAuth: boolean,\r\n    captcha: string | null,\r\n    accountLogin: (formData: FormDataType) => void\r\n}\r\ntype PropsTypeLogin = {\r\n    isAuth: boolean,\r\n    captcha: string | null,\r\n}\r\n\r\nconst ContactForm = reduxForm<FormDataType, PropsTypeLogin>({\r\n    form: 'login',\r\n})(Login);\r\n\r\n\r\nconst LoginContainer: React.FC<PropsTypeLoginContainer> = ({ isAuth, captcha, accountLogin }) => {\r\n    const onSubmit = (formData: FormDataType) => {\r\n        accountLogin(formData);\r\n    }\r\n    return (\r\n        <ContactForm onSubmit={onSubmit} captcha={captcha} isAuth={isAuth}/>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        captcha: state.auth.captchaUrl,\r\n    }\r\n}\r\nlet mapDispatchToProps = {\r\n    accountLogin: accountLoginTC\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer);","import { ThunkAction } from \"redux-thunk\";\r\nimport { authorizationTC } from \"./authReducer\";\r\nimport { AppStateType } from \"./reduxStore\";\r\n\r\nconst SET_INITIALIZED = \"SET_INITIALIZED\";\r\n\r\ntype initializedActionType = {\r\n  type: typeof SET_INITIALIZED;\r\n}\r\n\r\nexport const initializedAC = (): initializedActionType => {\r\n  return {\r\n    type: SET_INITIALIZED,\r\n  }\r\n}\r\n\r\nexport type initialStateType = {\r\n  initialized: boolean;\r\n}\r\n\r\nlet initialState: initialStateType = {\r\n  initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action: initializedActionType): initialStateType => {\r\n  let stateCopy;\r\n\r\n  switch (action.type) {\r\n    case \"SET_INITIALIZED\":\r\n      stateCopy = {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n      return stateCopy;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\ntype ThunkUsersType = ThunkAction<void, AppStateType, unknown, initializedActionType>\r\n\r\nexport const initializeAppTC = ():ThunkUsersType => async (dispatch) => {\r\n  \r\n  await dispatch(authorizationTC());\r\n  dispatch(initializedAC());\r\n};\r\n\r\n\r\nexport default appReducer;","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport { profileType } from '../../../../redux/profileReducer';\r\nimport styles from './EditProfile.module.css'\r\n\r\ntype PropsType = {\r\n  profile: profileType,\r\n  handleSubmit: () => void,\r\n  error: string,\r\n  submitSucceeded: boolean,\r\n}\r\n\r\nconst EditProfile: React.FC<PropsType> = (props) => {\r\n  let contactsArr = Object.keys(props.profile.contacts).map((a) => {\r\n    return <div className={styles.inputForm}>\r\n      <div className={styles.inputName}>{a}:</div>\r\n      <div className={styles.inputFieldParent}><Field className={styles.inputField} type=\"text\" component=\"input\" name={`contacts.${a}`} /></div>\r\n    </div>\r\n  })\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div className={styles.container}>\r\n        <div className={styles.editProfile}>\r\n          <h3 className={styles.title}>Edit profile</h3>\r\n          <div className={styles.inputForm}>\r\n            <div className={styles.inputName}>FullName:</div>\r\n            <div className={styles.inputFieldParent}><Field className={styles.inputField} type=\"text\" component=\"input\" name='fullName' /></div>\r\n          </div>\r\n          <div className={styles.inputForm}>\r\n            <div className={styles.inputName}>Looking for a job:</div>\r\n            <div className={styles.inputFieldParent}><Field className={styles.inputField} type=\"checkbox\" component=\"input\" name='lookingForAJob' /></div>\r\n          </div>\r\n          <div className={styles.inputForm}>\r\n            <div className={styles.inputName}>Your professional skills:</div>\r\n            <div className={styles.inputFieldParent}><Field className={`${styles.inputField} ${styles.textareaField}`} type=\"text\" component=\"textarea\" name='lookingForAJobDescription' /></div>\r\n          </div>\r\n          <div className={styles.inputForm}>\r\n            <div className={styles.inputName}>About me:</div>\r\n            <div className={styles.inputFieldParent}><Field className={`${styles.inputField} ${styles.textareaField}`} type=\"text\" component=\"textarea\" name='aboutMe' /></div>\r\n          </div>\r\n\r\n          {contactsArr}\r\n\r\n          <div className={styles.submitContainer}>\r\n            <button className={styles.submit}>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>\r\n          </div>\r\n          {props.error &&\r\n            <div className={styles.error}>\r\n              {props.error}\r\n            </div>}\r\n          {props.submitSucceeded &&\r\n            <div className={styles.submitSucceeded}>\r\n              Information has been edited and will appear on your page\r\n      </div>}\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\nexport default EditProfile","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm } from 'redux-form';\r\nimport { profileType, putProfileInfoTC, setProfileTC } from '../../../../redux/profileReducer';\r\nimport Loading from '../../../../common/loading/loading';\r\nimport EditProfile from './EditProfile';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirectComponent } from '../../../hoc/withAuthRedirect';\r\nimport { AppStateType } from '../../../../redux/reduxStore';\r\n\r\ntype FormDataType = {\r\n  email: string,\r\n  password: string\r\n}\r\n\r\ntype PropsType = {\r\n  profile: profileType,\r\n  authId: number,\r\n  putProfileInfo: (formData:FormDataType) => void;\r\n  setProfile: (authId:number) => void;\r\n}\r\n\r\nconst EditProfileContainer:React.FC<PropsType> = (props) => {\r\n  useEffect(() => {\r\n    if (props.profile == null) props.setProfile(props.authId);\r\n  }, [props.profile])\r\n\r\n  const EditProfileForm = reduxForm({\r\n    form: 'editMode',\r\n    //@ts-ignore\r\n  })(EditProfile);\r\n\r\n  const onSubmit = (formData: FormDataType) => {\r\n    props.putProfileInfo(formData);\r\n  }\r\n  return (\r\n    (props.profile !== null) ? <div>\r\n      {/* @ts-ignore */}\r\n      <EditProfileForm initialValues={props.profile} onSubmit={onSubmit} {...props} />\r\n    </div> : <Loading />\r\n  )\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    authId: state.auth.id,\r\n  }\r\n}\r\nlet mapDispatchToProps = {\r\n  putProfileInfo: putProfileInfoTC,\r\n  setProfile: setProfileTC,\r\n}\r\n\r\nexport default compose( \r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirectComponent)\r\n  (EditProfileContainer);","import React, { Suspense } from 'react';\r\nimport { Redirect, Route, Switch, withRouter } from 'react-router-dom';\r\nimport './App.css';\r\nimport Profile–°ontainer from './components/Profile/Profile–°ontainer';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport MessagesContainer from './components/Messages/MessagesContainer';\r\nimport News from './components/News/News';\r\nimport Music from './components/Music/Music';\r\nimport Settings from './components/Settings/Settings';\r\nimport LeftMenuContainer from './components/LeftMenu/LeftMenu container';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport LoginContainer from './components/Login/LoginContainer';\r\nimport { connect } from 'react-redux';\r\nimport { initializeAppTC } from './redux/appReducer';\r\nimport { compose } from 'redux';\r\nimport Loading from './common/loading/loading';\r\nimport EditProfileContainer from './components/Profile/ProfileInfo/EditProfile/EditProfileContainer';\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n  }\r\n  render() {\r\n    if (!this.props.initialize) {\r\n      return <Loading />\r\n    } else if (!this.props.isAuth) {\r\n      return (\r\n        <div>\r\n          <Route path='/'><Redirect to={'/login'} /><LoginContainer /></Route>\r\n        </div>\r\n      )\r\n\r\n    } else {\r\n      return (\r\n        <div className='SNsite'>\r\n          <LeftMenuContainer />\r\n          <div className='main'>\r\n            <HeaderContainer />\r\n            <Switch>\r\n              <Route exact path='/'><Redirect to={'/profile'} /></Route>\r\n              <Route exact path='/login'><Redirect to={'/profile'} /></Route>\r\n              <Route path='/profile/:userId?'><Profile–°ontainer /></Route>\r\n              <Route path='/messages'><Suspense><MessagesContainer /></Suspense></Route>\r\n              <Route path='/news'><News /></Route>\r\n              <Route path='/music'><Music /></Route>\r\n              <Route path='/settings'><Settings /></Route>\r\n              <Route path='/users'><Suspense><UsersContainer /></Suspense></Route>\r\n              <Route path='/edit'><EditProfileContainer /></Route>\r\n              <Route path='/*'><div>404 NOT FOUND</div></Route>\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    initialize: state.appInitial.initialized,\r\n    isAuth: state.auth.isAuth,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  initializeApp: initializeAppTC,\r\n}\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, mapDispatchToProps))\r\n  (App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport profileReducer from './profileReducer';\r\nimport friendsReducer from './friendsReducer';\r\nimport usersReducer from './usersReducer';\r\nimport authReducer from './authReducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport appReducer from './appReducer';\r\n\r\nlet rootReducer = combineReducers({\r\n  profilePage: profileReducer,\r\n  friendsPage: friendsReducer,\r\n  allUsers: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  appInitial: appReducer\r\n});\r\n\r\ntype RootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<RootReducerType>;\r\n\r\ntype PropertiesType<T> = T extends { [key: string]: infer U } ? U : never\r\nexport type InferActionsType<T extends { [key: string]: (...args: any[]) => any }> = ReturnType<PropertiesType<T>>\r\n\r\n//@ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './redux/reduxStore';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <App store={store} />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'));\r\n\r\n\r\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__2Oact\",\"user_logo\":\"User_user_logo__13RCD\",\"avatar\":\"User_avatar__3OW2G\",\"buttonFollow\":\"User_buttonFollow__2AWEQ\",\"buttonUnfollow\":\"User_buttonUnfollow__1ery8\",\"user_info\":\"User_user_info__2f5qM\",\"name\":\"User_name__2v59S\",\"city\":\"User_city__Mbi_o\",\"country\":\"User_country__mhr_u\",\"status\":\"User_status__2bfZB\",\"active\":\"User_active__CimQk\"};","module.exports = __webpack_public_path__ + \"static/media/empty-avatar.8cb04c92.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonFollow\":\"Botton_buttonFollow__3G5Ps\",\"buttonUnfollow\":\"Botton_buttonUnfollow__1TS7i\",\"disable\":\"Botton_disable__CRiVQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__3lzcm\",\"name\":\"Dialog_name__1RaE6\",\"message\":\"Dialog_message__34Fpw\",\"avatar\":\"Dialog_avatar__3q9LU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogMe_dialog__QVKRv\",\"name\":\"DialogMe_name__10liz\",\"message\":\"DialogMe_message__1iYah\",\"avatar\":\"DialogMe_avatar__2oxis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"Posts_postsBlock__3A-Ch\",\"createPost\":\"Posts_createPost__3QLxk\",\"posts\":\"Posts_posts__3ajs4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1PTCp\",\"likes\":\"Post_likes__BN6yF\",\"avatar\":\"Post_avatar__14uei\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EditProfile_container__89dEw\",\"title\":\"EditProfile_title__2pvlb\",\"editProfile\":\"EditProfile_editProfile__3Xgvz\",\"inputForm\":\"EditProfile_inputForm__2S3iT\",\"inputName\":\"EditProfile_inputName__LLwBK\",\"inputFieldParent\":\"EditProfile_inputFieldParent__2KPNU\",\"inputField\":\"EditProfile_inputField__3GkjT\",\"textareaField\":\"EditProfile_textareaField__3Sk19\",\"submitContainer\":\"EditProfile_submitContainer__3TpZ2\",\"submit\":\"EditProfile_submit__2oJ75\",\"error\":\"EditProfile_error__1DibJ\",\"submitSucceeded\":\"EditProfile_submitSucceeded__24-zm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headline\":\"Messages_headline__2jSMC\",\"messages\":\"Messages_messages__2W8Ev\",\"dialogs\":\"Messages_dialogs__1EU1k\",\"allMessages\":\"Messages_allMessages__1EDcC\",\"chatInput\":\"Messages_chatInput__2VqdS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"person\":\"DialogWithPerson_person__3quXZ\",\"avatar\":\"DialogWithPerson_avatar__1pAhJ\",\"active\":\"DialogWithPerson_active__3X5y0\"};"],"sourceRoot":""}