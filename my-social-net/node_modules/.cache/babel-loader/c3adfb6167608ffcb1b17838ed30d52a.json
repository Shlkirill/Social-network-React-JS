{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tor\\\\Desktop\\\\Web\\\\4-React-JS\\\\my-social-net\\\\src\\\\components\\\\Users\\\\UsersContainer.jsx\";\nimport React from 'react';\nimport axios from 'axios';\nimport Users from './Users';\nimport { connect } from 'react-redux';\nimport { toogleFollowAC, setUsersAC, setPageAC, setMoreUsersAC, setCountUsersAC } from '../../redux/usersReducer';\n\nclass UsersAPIContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getActivePage = page => {\n      this.props.setPage(page);\n      let serverRequest = axios.get(`https://social-network.samuraijs.com/api/1.0/users?count=${this.props.pageSize}&page=${page}`);\n\n      let handler = response => {\n        this.props.setUsers(response.data.items, response.data.totalCount);\n      };\n\n      serverRequest.then(handler);\n    };\n\n    this.setCountUsers = value => {\n      this.props.setCountUsers(value);\n      let serverRequest = axios.get(`https://social-network.samuraijs.com/api/1.0/users?count=${value}&page=${this.props.activePage}`);\n\n      let handler = response => {\n        this.props.setUsers(response.data.items, response.data.totalCount);\n      };\n\n      serverRequest.then(handler);\n    };\n  }\n\n  componentDidMount() {\n    let serverRequest = axios.get(`https://social-network.samuraijs.com/api/1.0/users?count=${this.props.pageSize}&page=${this.props.activePage}`);\n\n    let handler = response => {\n      this.props.setUsers(response.data.items, response.data.totalCount);\n    };\n\n    serverRequest.then(handler);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Users, {\n      getActivePage: this.getActivePage,\n      setCountUsers: this.setCountUsers,\n      users: this.props.users,\n      toogleFollow: this.props.toogleFollow,\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.allUsers.users,\n    pageSize: state.allUsers.pageSize,\n    totalUsersCount: state.allUsers.totalUsersCount,\n    avtivePage: state.allUsers.activePage\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    toogleFollow: (id, followed) => {\n      dispatch(toogleFollowAC(id, followed));\n    },\n    setUsers: (users, totalCount) => {\n      dispatch(setUsersAC(users, totalCount));\n    },\n    setPage: clickPage => {\n      dispatch(setPageAC(clickPage));\n    },\n    setCountUsers: count => {\n      dispatch(setCountUsersAC(count));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersAPIContainer);","map":{"version":3,"sources":["C:/Users/Tor/Desktop/Web/4-React-JS/my-social-net/src/components/Users/UsersContainer.jsx"],"names":["React","axios","Users","connect","toogleFollowAC","setUsersAC","setPageAC","setMoreUsersAC","setCountUsersAC","UsersAPIContainer","Component","getActivePage","page","props","setPage","serverRequest","get","pageSize","handler","response","setUsers","data","items","totalCount","then","setCountUsers","value","activePage","componentDidMount","render","users","toogleFollow","totalUsersCount","mapStateToProps","state","allUsers","avtivePage","mapDispatchToProps","dispatch","id","followed","clickPage","count"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport Users from './Users';\r\nimport { connect } from 'react-redux';\r\nimport { toogleFollowAC, setUsersAC, setPageAC, setMoreUsersAC, setCountUsersAC } from '../../redux/usersReducer';\r\n\r\nclass UsersAPIContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let serverRequest = axios.get(`https://social-network.samuraijs.com/api/1.0/users?count=${this.props.pageSize}&page=${this.props.activePage}`);\r\n\r\n        let handler = (response) => {\r\n            this.props.setUsers(response.data.items, response.data.totalCount);\r\n        };\r\n        serverRequest.then(handler);\r\n    }\r\n    getActivePage = (page) => {\r\n        this.props.setPage(page);\r\n        let serverRequest = axios.get(`https://social-network.samuraijs.com/api/1.0/users?count=${this.props.pageSize}&page=${page}`);\r\n\r\n        let handler = (response) => {\r\n            this.props.setUsers(response.data.items, response.data.totalCount);\r\n        };\r\n        serverRequest.then(handler);\r\n    }\r\n    setCountUsers = (value) => {\r\n        this.props.setCountUsers(value);\r\n        let serverRequest = axios.get(`https://social-network.samuraijs.com/api/1.0/users?count=${value}&page=${this.props.activePage}`);\r\n\r\n        let handler = (response) => {\r\n            this.props.setUsers(response.data.items, response.data.totalCount);\r\n        };\r\n        serverRequest.then(handler);\r\n    }\r\n    render() {\r\n        return (\r\n            <Users getActivePage={this.getActivePage}\r\n                setCountUsers={this.setCountUsers}\r\n                users={this.props.users}\r\n                toogleFollow={this.props.toogleFollow}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize} />\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.allUsers.users,\r\n        pageSize: state.allUsers.pageSize,\r\n        totalUsersCount: state.allUsers.totalUsersCount,\r\n        avtivePage: state.allUsers.activePage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toogleFollow: (id, followed) => { dispatch(toogleFollowAC(id, followed)) },\r\n        setUsers: (users, totalCount) => { dispatch(setUsersAC(users, totalCount)) },\r\n        setPage: (clickPage) => { dispatch(setPageAC(clickPage)) },\r\n        setCountUsers: (count) => { dispatch(setCountUsersAC(count)) },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersAPIContainer);"]},"metadata":{},"sourceType":"module"}