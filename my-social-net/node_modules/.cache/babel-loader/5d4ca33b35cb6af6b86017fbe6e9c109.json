{"ast":null,"code":"import { apiAuth, apiLogin, apiLogout } from \"../api/api\";\nexport const setUserDataAC = (data, isAuth) => {\n  return {\n    type: \"SET_USER_DATA\",\n    data,\n    isAuth\n  };\n};\nexport const toogleIfFetchingAC = isFetching => {\n  return {\n    type: 'TOOGLE_IS_FETCHING',\n    isFetching\n  };\n};\nexport const setLoginAC = (login, password, remember) => {\n  return {\n    type: 'SET_LOGIN',\n    login,\n    password,\n    remember\n  };\n};\nlet initialState = {\n  email: null,\n  id: null,\n  login: null,\n  isFetching: false,\n  isAuth: false\n};\n\nconst AuthReducer = (state = initialState, action) => {\n  let stateCopy;\n\n  switch (action.type) {\n    case \"SET_USER_DATA\":\n      stateCopy = { ...state,\n        ...action.data,\n        isAuth: action.isAuth\n      };\n      return stateCopy;\n\n    case 'TOOGLE_IS_FETCHING':\n      stateCopy = { ...state,\n        isFetching: action.isFetching\n      };\n      return stateCopy;\n\n    case 'SET_LOGIN':\n      stateCopy = { ...state\n      };\n      return stateCopy;\n\n    default:\n      return state;\n  }\n};\n\nexport const authorizationTC = () => {\n  return dispatch => {\n    apiAuth().then(response => {\n      if (response.resultCode === 0) {\n        dispatch(setUserDataAC(response.data, true));\n      }\n\n      ;\n    });\n  };\n};\nexport const accountLoginTC = obj => {\n  debugger;\n  return dispatch => {\n    apiLogin(obj).then(response => {\n      if (response.data.resultCode === 0) {\n        dispatch(setUserDataAC(response.data, true));\n        alert('Вы вошли');\n      } else {\n        alert('где то ошибочка');\n      }\n    });\n  };\n};\nexport const outOfAccountTC = () => {\n  return dispatch => {\n    apiLogout().then(() => {\n      dispatch(setUserDataAC(null, false));\n      alert('Вы вышли');\n    });\n  };\n};\nexport default AuthReducer;","map":{"version":3,"sources":["D:/Desktop/Web/4-React-JS/my-social-net/src/redux/authReducer.js"],"names":["apiAuth","apiLogin","apiLogout","setUserDataAC","data","isAuth","type","toogleIfFetchingAC","isFetching","setLoginAC","login","password","remember","initialState","email","id","AuthReducer","state","action","stateCopy","authorizationTC","dispatch","then","response","resultCode","accountLoginTC","obj","alert","outOfAccountTC"],"mappings":"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","sourcesContent":["import { apiAuth, apiLogin, apiLogout } from \"../api/api\";\r\n\r\nexport const setUserDataAC = (data, isAuth) => {\r\n  return {\r\n    type: \"SET_USER_DATA\",\r\n    data,\r\n    isAuth\r\n  }\r\n}\r\nexport const toogleIfFetchingAC = (isFetching) => {\r\n  return {\r\n    type: 'TOOGLE_IS_FETCHING',\r\n    isFetching\r\n  }\r\n}\r\nexport const setLoginAC = (login, password, remember) => {\r\n  return {\r\n    type: 'SET_LOGIN',\r\n    login,\r\n    password,\r\n    remember\r\n  }\r\n}\r\n\r\nlet initialState = {\r\n  email: null,\r\n  id: null,\r\n  login: null,\r\n  isFetching: false,\r\n  isAuth: false,\r\n};\r\n\r\nconst AuthReducer = (state = initialState, action) => {\r\n  let stateCopy;\r\n\r\n  switch (action.type) {\r\n    case \"SET_USER_DATA\":\r\n      stateCopy = {\r\n        ...state,\r\n        ...action.data,\r\n        isAuth: action.isAuth,\r\n      };\r\n      return stateCopy;\r\n    case 'TOOGLE_IS_FETCHING':\r\n      stateCopy = {\r\n        ...state,\r\n        isFetching: action.isFetching\r\n      }\r\n      return stateCopy;\r\n    case 'SET_LOGIN':\r\n      stateCopy = {\r\n        ...state,\r\n      };\r\n      return stateCopy;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const authorizationTC = () => {\r\n  return (dispatch) => {\r\n    apiAuth().then((response) => {\r\n      if (response.resultCode === 0) {\r\n        dispatch(setUserDataAC(response.data, true));\r\n      };\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const accountLoginTC = (obj) => {\r\n  debugger;\r\n  return (dispatch) => {\r\n    apiLogin(obj).then((response) => {\r\n      if (response.data.resultCode === 0) {\r\n        dispatch(setUserDataAC(response.data, true));\r\n        alert('Вы вошли')\r\n      } else {\r\n        alert('где то ошибочка')\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const outOfAccountTC = () => {\r\n  return (dispatch) => {\r\n    apiLogout().then(()=> {\r\n      dispatch(setUserDataAC(null, false));\r\n      alert('Вы вышли')\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default AuthReducer;"]},"metadata":{},"sourceType":"module"}