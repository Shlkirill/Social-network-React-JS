{"ast":null,"code":"export const toogleFollowAC = (id, followed) => {\n  return {\n    type: \"TOOGLE_FOLLOW\",\n    id,\n    followed\n  };\n};\nexport const setUsersAC = (users, totalCount) => {\n  return {\n    type: 'SET_USERS',\n    users,\n    totalCount\n  };\n};\nexport const setPageAC = clickPage => {\n  return {\n    type: 'SET_PAGE',\n    clickPage\n  };\n};\nexport const setMoreUsersAC = oldPageSize => {\n  return {\n    type: 'SET_MORE_USERS',\n    oldPageSize\n  };\n};\nexport const setCountUsersAC = count => {\n  return {\n    type: 'SET_COUNT_USERS',\n    count\n  };\n};\nlet initialState = {\n  users: [],\n  pageSize: 10,\n  totalUsersCount: 0,\n  activePage: 1\n};\n\nconst UsersReducer = (state = initialState, action) => {\n  let stateCopy;\n\n  switch (action.type) {\n    case \"TOOGLE_FOLLOW\":\n      stateCopy = { ...state,\n        users: [...state.users]\n      };\n\n      for (let k of stateCopy.users) {\n        if (k.id == action.id) {\n          action.followed == 'follow' ? k.followed = false : k.followed = true;\n        }\n      }\n\n      return stateCopy;\n\n    case 'SET_USERS':\n      stateCopy = { ...state,\n        users: action.users,\n        totalUsersCount: action.totalCount\n      };\n      return stateCopy;\n\n    case 'SET_PAGE':\n      stateCopy = { ...state,\n        activePage: action.clickPage\n      };\n      return stateCopy;\n\n    case 'SET_MORE_USERS':\n      let newPageSize = action.oldPageSize < 100 ? action.oldPageSize + 10 : 100;\n\n      if (newPageSize == 100) {\n        alert(\"Показано 100 человек, больше показать не могу, перейдите на следующую страницу\");\n      }\n\n      stateCopy = { ...state,\n        pageSize: newPageSize\n      };\n      return stateCopy;\n\n    case 'SET_COUNT_USERS':\n      alert(action.count);\n      stateCopy = { ...state\n      };\n      return stateCopy;\n\n    default:\n      return state;\n  }\n};\n\nexport default UsersReducer;","map":{"version":3,"sources":["C:/Users/Tor/Desktop/Web/4-React-JS/my-social-net/src/redux/usersReducer.js"],"names":["toogleFollowAC","id","followed","type","setUsersAC","users","totalCount","setPageAC","clickPage","setMoreUsersAC","oldPageSize","setCountUsersAC","count","initialState","pageSize","totalUsersCount","activePage","UsersReducer","state","action","stateCopy","k","newPageSize","alert"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAG,CAACC,EAAD,EAAKC,QAAL,KAAkB;AAC9C,SAAO;AACLC,IAAAA,IAAI,EAAE,eADD;AAELF,IAAAA,EAFK;AAGLC,IAAAA;AAHK,GAAP;AAKD,CANM;AAOP,OAAO,MAAME,UAAU,GAAG,CAACC,KAAD,EAAQC,UAAR,KAAuB;AAC/C,SAAO;AACLH,IAAAA,IAAI,EAAE,WADD;AAELE,IAAAA,KAFK;AAGLC,IAAAA;AAHK,GAAP;AAKD,CANM;AAOP,OAAO,MAAMC,SAAS,GAAIC,SAAD,IAAe;AACtC,SAAO;AACLL,IAAAA,IAAI,EAAE,UADD;AAELK,IAAAA;AAFK,GAAP;AAID,CALM;AAMP,OAAO,MAAMC,cAAc,GAAIC,WAAD,IAAiB;AAC7C,SAAO;AACLP,IAAAA,IAAI,EAAE,gBADD;AAELO,IAAAA;AAFK,GAAP;AAID,CALM;AAMP,OAAO,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACxC,SAAO;AACLT,IAAAA,IAAI,EAAE,iBADD;AAELS,IAAAA;AAFK,GAAP;AAID,CALM;AAMP,IAAIC,YAAY,GAAG;AACjBR,EAAAA,KAAK,EAAE,EADU;AAEjBS,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,eAAe,EAAE,CAHA;AAIjBC,EAAAA,UAAU,EAAE;AAJK,CAAnB;;AAOA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACrD,MAAIC,SAAJ;;AAEA,UAAQD,MAAM,CAAChB,IAAf;AACE,SAAK,eAAL;AACEiB,MAAAA,SAAS,GAAG,EACV,GAAGF,KADO;AAEVb,QAAAA,KAAK,EAAE,CAAC,GAAGa,KAAK,CAACb,KAAV;AAFG,OAAZ;;AAIA,WAAK,IAAIgB,CAAT,IAAcD,SAAS,CAACf,KAAxB,EAA+B;AAC7B,YAAIgB,CAAC,CAACpB,EAAF,IAAQkB,MAAM,CAAClB,EAAnB,EAAuB;AACpBkB,UAAAA,MAAM,CAACjB,QAAP,IAAmB,QAApB,GAAgCmB,CAAC,CAACnB,QAAF,GAAa,KAA7C,GAAqDmB,CAAC,CAACnB,QAAF,GAAa,IAAlE;AACD;AACF;;AACD,aAAOkB,SAAP;;AACF,SAAK,WAAL;AACEA,MAAAA,SAAS,GAAG,EACV,GAAGF,KADO;AAEVb,QAAAA,KAAK,EAAEc,MAAM,CAACd,KAFJ;AAGVU,QAAAA,eAAe,EAAEI,MAAM,CAACb;AAHd,OAAZ;AAKA,aAAOc,SAAP;;AACF,SAAK,UAAL;AACEA,MAAAA,SAAS,GAAG,EACV,GAAGF,KADO;AAEVF,QAAAA,UAAU,EAAEG,MAAM,CAACX;AAFT,OAAZ;AAIA,aAAOY,SAAP;;AACF,SAAK,gBAAL;AACE,UAAIE,WAAW,GAAIH,MAAM,CAACT,WAAP,GAAqB,GAAtB,GAA6BS,MAAM,CAACT,WAAP,GAAqB,EAAlD,GAAuD,GAAzE;;AACA,UAAIY,WAAW,IAAI,GAAnB,EAAwB;AACtBC,QAAAA,KAAK,CAAC,gFAAD,CAAL;AACD;;AACDH,MAAAA,SAAS,GAAG,EACV,GAAGF,KADO;AAEVJ,QAAAA,QAAQ,EAAEQ;AAFA,OAAZ;AAIA,aAAOF,SAAP;;AACF,SAAK,iBAAL;AACEG,MAAAA,KAAK,CAACJ,MAAM,CAACP,KAAR,CAAL;AACAQ,MAAAA,SAAS,GAAG,EACV,GAAGF;AADO,OAAZ;AAGA,aAAOE,SAAP;;AACF;AACE,aAAOF,KAAP;AA1CJ;AA4CD,CA/CD;;AAiDA,eAAeD,YAAf","sourcesContent":["export const toogleFollowAC = (id, followed) => {\r\n  return {\r\n    type: \"TOOGLE_FOLLOW\",\r\n    id,\r\n    followed,\r\n  }\r\n}\r\nexport const setUsersAC = (users, totalCount) => {\r\n  return {\r\n    type: 'SET_USERS',\r\n    users,\r\n    totalCount,\r\n  }\r\n}\r\nexport const setPageAC = (clickPage) => {\r\n  return {\r\n    type: 'SET_PAGE',\r\n    clickPage,\r\n  }\r\n}\r\nexport const setMoreUsersAC = (oldPageSize) => {\r\n  return {\r\n    type: 'SET_MORE_USERS',\r\n    oldPageSize\r\n  }\r\n}\r\nexport const setCountUsersAC = (count) => {\r\n  return {\r\n    type: 'SET_COUNT_USERS',\r\n    count\r\n  }\r\n}\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 10,\r\n  totalUsersCount: 0,\r\n  activePage: 1,\r\n};\r\n\r\nconst UsersReducer = (state = initialState, action) => {\r\n  let stateCopy;\r\n\r\n  switch (action.type) {\r\n    case \"TOOGLE_FOLLOW\":\r\n      stateCopy = {\r\n        ...state,\r\n        users: [...state.users]\r\n      };\r\n      for (let k of stateCopy.users) {\r\n        if (k.id == action.id) {\r\n          (action.followed == 'follow') ? k.followed = false : k.followed = true;\r\n        }\r\n      }\r\n      return stateCopy;\r\n    case 'SET_USERS':\r\n      stateCopy = {\r\n        ...state,\r\n        users: action.users,\r\n        totalUsersCount: action.totalCount,\r\n      }\r\n      return stateCopy;\r\n    case 'SET_PAGE':\r\n      stateCopy = {\r\n        ...state,\r\n        activePage: action.clickPage,\r\n      }\r\n      return stateCopy;\r\n    case 'SET_MORE_USERS':\r\n      let newPageSize = (action.oldPageSize < 100) ? action.oldPageSize + 10 : 100;\r\n      if (newPageSize == 100) {\r\n        alert(\"Показано 100 человек, больше показать не могу, перейдите на следующую страницу\")\r\n      }\r\n      stateCopy = {\r\n        ...state,\r\n        pageSize: newPageSize,\r\n      }\r\n      return stateCopy;\r\n    case 'SET_COUNT_USERS':\r\n      alert(action.count);\r\n      stateCopy = {\r\n        ...state,\r\n      }\r\n      return stateCopy;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default UsersReducer;"]},"metadata":{},"sourceType":"module"}