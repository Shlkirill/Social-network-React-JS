{"ast":null,"code":"export const setUserDataAC = data => {\n  return {\n    type: \"SET_USER_DATA\",\n    data\n  };\n};\nexport const toogleIfFetchingAC = isFetching => {\n  return {\n    type: 'TOOGLE_IS_FETCHING',\n    isFetching\n  };\n};\nlet initialState = {\n  email: null,\n  id: null,\n  login: null,\n  isFetching: false\n};\n\nconst AuthReducer = (state = initialState, action) => {\n  let stateCopy;\n\n  switch (action.type) {\n    case \"SET_USER_DATA\":\n      stateCopy = { ...state,\n        ...action.data\n      };\n      return stateCopy;\n\n    case 'TOOGLE_IS_FETCHING':\n      stateCopy = { ...state,\n        isFetching: action.isFetching\n      };\n      return stateCopy;\n\n    default:\n      return state;\n  }\n};\n\nexport default AuthReducer;","map":{"version":3,"sources":["C:/Users/Tor/Desktop/Web/4-React-JS/my-social-net/src/redux/authReducer.js"],"names":["setUserDataAC","data","type","toogleIfFetchingAC","isFetching","initialState","email","id","login","AuthReducer","state","action","stateCopy"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAIC,IAAD,IAAU;AACrC,SAAO;AACLC,IAAAA,IAAI,EAAE,eADD;AAELD,IAAAA;AAFK,GAAP;AAID,CALM;AAMP,OAAO,MAAME,kBAAkB,GAAIC,UAAD,IAAgB;AAChD,SAAO;AACLF,IAAAA,IAAI,EAAE,oBADD;AAELE,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,IAAIC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,IADU;AAEjBC,EAAAA,EAAE,EAAE,IAFa;AAGjBC,EAAAA,KAAK,EAAE,IAHU;AAIjBJ,EAAAA,UAAU,EAAE;AAJK,CAAnB;;AAOA,MAAMK,WAAW,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACpD,MAAIC,SAAJ;;AAEA,UAAQD,MAAM,CAACT,IAAf;AACE,SAAK,eAAL;AACEU,MAAAA,SAAS,GAAG,EACV,GAAGF,KADO;AAEV,WAAGC,MAAM,CAACV;AAFA,OAAZ;AAKA,aAAOW,SAAP;;AACF,SAAK,oBAAL;AACEA,MAAAA,SAAS,GAAG,EACV,GAAGF,KADO;AAEVN,QAAAA,UAAU,EAAEO,MAAM,CAACP;AAFT,OAAZ;AAIA,aAAOQ,SAAP;;AACF;AACE,aAAOF,KAAP;AAfJ;AAiBD,CApBD;;AAsBA,eAAeD,WAAf","sourcesContent":["export const setUserDataAC = (data) => {\r\n  return {\r\n    type: \"SET_USER_DATA\",\r\n    data,\r\n  }\r\n}\r\nexport const toogleIfFetchingAC = (isFetching) => {\r\n  return {\r\n    type: 'TOOGLE_IS_FETCHING',\r\n    isFetching\r\n  }\r\n}\r\n\r\nlet initialState = {\r\n  email: null,\r\n  id: null,\r\n  login: null,\r\n  isFetching: false\r\n};\r\n\r\nconst AuthReducer = (state = initialState, action) => {\r\n  let stateCopy;\r\n\r\n  switch (action.type) {\r\n    case \"SET_USER_DATA\":\r\n      stateCopy = {\r\n        ...state,\r\n        ...action.data,\r\n\r\n      };\r\n      return stateCopy;\r\n    case 'TOOGLE_IS_FETCHING':\r\n      stateCopy = {\r\n        ...state,\r\n        isFetching: action.isFetching\r\n      }\r\n      return stateCopy;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default AuthReducer;"]},"metadata":{},"sourceType":"module"}