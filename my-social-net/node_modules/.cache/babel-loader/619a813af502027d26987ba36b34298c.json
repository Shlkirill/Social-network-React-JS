{"ast":null,"code":"export const addPostActionCreator = text => {\n  return {\n    type: \"ADD-POST\",\n    newText: text\n  };\n};\nexport const addLikeActionCreator = props => {\n  return {\n    type: \"ADD-LIKE\",\n    clickPost: props\n  };\n};\nexport const setUserProfileAC = user => {\n  return {\n    type: \"SET_USER\",\n    user\n  };\n};\nlet initialState = {\n  posts: [{\n    id: 1,\n    text: 'Hello! How are you?',\n    likes: 3,\n    likeClick: 0\n  }, {\n    id: 2,\n    text: 'My name is Kirill!',\n    likes: 8,\n    likeClick: 0\n  }, {\n    id: 3,\n    text: 'Good life',\n    likes: 5,\n    likeClick: 0\n  }]\n};\n\nconst profileReducer = (state = initialState, action) => {\n  let stateCopy;\n\n  switch (action.type) {\n    case \"SET_USER\":\n      stateCopy = { ...state\n      };\n      console.log(action.user);\n      return stateCopy;\n\n    case \"ADD-POST\":\n      stateCopy = { ...state,\n        posts: [...state.posts]\n      };\n      let newId = stateCopy.posts.length + 1;\n      let newLikes = 0;\n      let newPost = {\n        id: newId,\n        text: action.newText,\n        likes: newLikes,\n        likeClick: 0\n      };\n      stateCopy.posts.push(newPost);\n      return stateCopy;\n\n    case \"ADD-LIKE\":\n      stateCopy = { ...state,\n        posts: [...state.posts]\n      };\n\n      for (let k of stateCopy.posts) {\n        if (k.text == action.clickPost.text) {\n          if (k.likeClick == 0) {\n            k.likes += 1;\n            k.likeClick = 1;\n          } else {\n            k.likes -= 1;\n            k.likeClick = 0;\n          }\n        }\n      }\n\n      return stateCopy;\n\n    default:\n      return state;\n  }\n};\n\nexport default profileReducer;","map":{"version":3,"sources":["C:/Users/Tor/Desktop/Web/4-React-JS/my-social-net/src/redux/profileReducer.js"],"names":["addPostActionCreator","text","type","newText","addLikeActionCreator","props","clickPost","setUserProfileAC","user","initialState","posts","id","likes","likeClick","profileReducer","state","action","stateCopy","console","log","newId","length","newLikes","newPost","push","k"],"mappings":"AAAA,OAAO,MAAMA,oBAAoB,GAAIC,IAAD,IAAU;AAC5C,SAAO;AACLC,IAAAA,IAAI,EAAE,UADD;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,oBAAoB,GAAIC,KAAD,IAAW;AAC7C,SAAO;AACLH,IAAAA,IAAI,EAAE,UADD;AAELI,IAAAA,SAAS,EAAED;AAFN,GAAP;AAID,CALM;AAMP,OAAO,MAAME,gBAAgB,GAAIC,IAAD,IAAU;AACxC,SAAO;AACLN,IAAAA,IAAI,EAAE,UADD;AAELM,IAAAA;AAFK,GAAP;AAID,CALM;AAQP,IAAIC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,CACL;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASV,IAAAA,IAAI,EAAE,qBAAf;AAAsCW,IAAAA,KAAK,EAAE,CAA7C;AAAgDC,IAAAA,SAAS,EAAE;AAA3D,GADK,EAEL;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASV,IAAAA,IAAI,EAAE,oBAAf;AAAqCW,IAAAA,KAAK,EAAE,CAA5C;AAA+CC,IAAAA,SAAS,EAAE;AAA1D,GAFK,EAGL;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASV,IAAAA,IAAI,EAAE,WAAf;AAA4BW,IAAAA,KAAK,EAAE,CAAnC;AAAsCC,IAAAA,SAAS,EAAE;AAAjD,GAHK;AADU,CAAnB;;AAQA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACvD,MAAIC,SAAJ;;AAEA,UAAQD,MAAM,CAACd,IAAf;AACE,SAAK,UAAL;AACEe,MAAAA,SAAS,GAAG,EACV,GAAGF;AADO,OAAZ;AAGAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACR,IAAnB;AACA,aAAOS,SAAP;;AACF,SAAK,UAAL;AACEA,MAAAA,SAAS,GAAG,EACV,GAAGF,KADO;AAEVL,QAAAA,KAAK,EAAE,CAAC,GAAGK,KAAK,CAACL,KAAV;AAFG,OAAZ;AAIA,UAAIU,KAAK,GAAGH,SAAS,CAACP,KAAV,CAAgBW,MAAhB,GAAyB,CAArC;AACA,UAAIC,QAAQ,GAAG,CAAf;AACA,UAAIC,OAAO,GAAG;AACZZ,QAAAA,EAAE,EAAES,KADQ;AAEZnB,QAAAA,IAAI,EAAEe,MAAM,CAACb,OAFD;AAGZS,QAAAA,KAAK,EAAEU,QAHK;AAIZT,QAAAA,SAAS,EAAE;AAJC,OAAd;AAMAI,MAAAA,SAAS,CAACP,KAAV,CAAgBc,IAAhB,CAAqBD,OAArB;AACA,aAAON,SAAP;;AACF,SAAK,UAAL;AACEA,MAAAA,SAAS,GAAG,EACV,GAAGF,KADO;AAEVL,QAAAA,KAAK,EAAE,CAAC,GAAGK,KAAK,CAACL,KAAV;AAFG,OAAZ;;AAIA,WAAK,IAAIe,CAAT,IAAcR,SAAS,CAACP,KAAxB,EAA+B;AAC7B,YAAIe,CAAC,CAACxB,IAAF,IAAUe,MAAM,CAACV,SAAP,CAAiBL,IAA/B,EAAqC;AACnC,cAAIwB,CAAC,CAACZ,SAAF,IAAe,CAAnB,EAAsB;AACpBY,YAAAA,CAAC,CAACb,KAAF,IAAW,CAAX;AACAa,YAAAA,CAAC,CAACZ,SAAF,GAAc,CAAd;AACD,WAHD,MAGO;AACLY,YAAAA,CAAC,CAACb,KAAF,IAAW,CAAX;AACAa,YAAAA,CAAC,CAACZ,SAAF,GAAc,CAAd;AACD;AACF;AACF;;AACD,aAAOI,SAAP;;AACF;AACE,aAAOF,KAAP;AAxCJ;AA0CD,CA7CD;;AA+CA,eAAeD,cAAf","sourcesContent":["export const addPostActionCreator = (text) => {\r\n  return {\r\n    type: \"ADD-POST\",\r\n    newText: text,\r\n  }\r\n}\r\n\r\nexport const addLikeActionCreator = (props) => {\r\n  return {\r\n    type: \"ADD-LIKE\",\r\n    clickPost: props\r\n  }\r\n}\r\nexport const setUserProfileAC = (user) => {\r\n  return {\r\n    type: \"SET_USER\",\r\n    user\r\n  }\r\n}\r\n\r\n\r\nlet initialState = {\r\n  posts: [\r\n    { id: 1, text: 'Hello! How are you?', likes: 3, likeClick: 0 },\r\n    { id: 2, text: 'My name is Kirill!', likes: 8, likeClick: 0 },\r\n    { id: 3, text: 'Good life', likes: 5, likeClick: 0 }\r\n  ],\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  let stateCopy;\r\n\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      stateCopy = {\r\n        ...state,\r\n      };\r\n      console.log(action.user);\r\n      return stateCopy;\r\n    case \"ADD-POST\":\r\n      stateCopy = {\r\n        ...state,\r\n        posts: [...state.posts],\r\n      };\r\n      let newId = stateCopy.posts.length + 1;\r\n      let newLikes = 0;\r\n      let newPost = {\r\n        id: newId,\r\n        text: action.newText,\r\n        likes: newLikes,\r\n        likeClick: 0\r\n      };\r\n      stateCopy.posts.push(newPost);\r\n      return stateCopy;\r\n    case \"ADD-LIKE\":\r\n      stateCopy = {\r\n        ...state,\r\n        posts: [...state.posts],\r\n      };\r\n      for (let k of stateCopy.posts) {\r\n        if (k.text == action.clickPost.text) {\r\n          if (k.likeClick == 0) {\r\n            k.likes += 1;\r\n            k.likeClick = 1;\r\n          } else {\r\n            k.likes -= 1;\r\n            k.likeClick = 0;\r\n          }\r\n        }\r\n      }\r\n      return stateCopy;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}