{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tor\\\\Desktop\\\\Web\\\\4-React-JS\\\\my-social-net\\\\src\\\\components\\\\Profile\\\\Profile\\u0421ontainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Profile from './Profile';\nimport { followingInProgressAC, followUserTC, getFollowUserTC, setFollowedUserAC, setProfileTC, setUserProfileAC, unFollowUserTC } from '../../redux/profileReducer';\nimport { withRouter } from 'react-router-dom';\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = 2;\n    }\n\n    this.props.setProfile(userId);\n    this.props.getFollowUser(userId);\n  }\n\n  render() {\n    debugger;\n    return /*#__PURE__*/React.createElement(Profile, {\n      profile: this.props.profile,\n      followed: this.props.followed,\n      setFollowedUser: this.props.setFollowedUser,\n      isProgress: this.props.isProgress,\n      followingInProgress: this.props.followingInProgress,\n      followUser: this.props.followUser,\n      unFollowUser: this.props.unFollowUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    profile: state.profilePage.profile,\n    followed: state.profilePage.followed,\n    isProgress: state.profilePage.followingInProgress,\n    isAuth: state.auth.isAuth\n  };\n};\n\nlet mapDispatchToProps = {\n  setUserProfile: setUserProfileAC,\n  setFollowedUser: setFollowedUserAC,\n  followingInProgress: followingInProgressAC,\n  setProfile: setProfileTC,\n  getFollowUser: getFollowUserTC,\n  followUser: followUserTC,\n  unFollowUser: unFollowUserTC\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ProfileContainer));","map":{"version":3,"sources":["C:/Users/Tor/Desktop/Web/4-React-JS/my-social-net/src/components/Profile/Profile–°ontainer.jsx"],"names":["React","connect","Profile","followingInProgressAC","followUserTC","getFollowUserTC","setFollowedUserAC","setProfileTC","setUserProfileAC","unFollowUserTC","withRouter","ProfileContainer","Component","componentDidMount","userId","props","match","params","setProfile","getFollowUser","render","profile","followed","setFollowedUser","isProgress","followingInProgress","followUser","unFollowUser","mapStateToProps","state","profilePage","isAuth","auth","mapDispatchToProps","setUserProfile"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,qBAAT,EAAgCC,YAAhC,EAA8CC,eAA9C,EAA+DC,iBAA/D,EAAkFC,YAAlF,EAAgGC,gBAAhG,EAAkHC,cAAlH,QAAwI,4BAAxI;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,gBAAN,SAA+BX,KAAK,CAACY,SAArC,CAA+C;AAE7CC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,QAAI,CAACA,MAAL,EAAa;AACXA,MAAAA,MAAM,GAAG,CAAT;AACD;;AACD,SAAKC,KAAL,CAAWG,UAAX,CAAsBJ,MAAtB;AACA,SAAKC,KAAL,CAAWI,aAAX,CAAyBL,MAAzB;AACD;;AACDM,EAAAA,MAAM,GAAG;AACP;AACA,wBAAQ,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAE,KAAKL,KAAL,CAAWM,OAA7B;AAAsC,MAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWO,QAA3D;AACN,MAAA,eAAe,EAAE,KAAKP,KAAL,CAAWQ,eADtB;AACuC,MAAA,UAAU,EAAE,KAAKR,KAAL,CAAWS,UAD9D;AAEN,MAAA,mBAAmB,EAAE,KAAKT,KAAL,CAAWU,mBAF1B;AAE+C,MAAA,UAAU,EAAE,KAAKV,KAAL,CAAWW,UAFtE;AAEkF,MAAA,YAAY,EAAE,KAAKX,KAAL,CAAWY,YAF3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AAGD;;AAf4C;;AAoB/C,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACLR,IAAAA,OAAO,EAAEQ,KAAK,CAACC,WAAN,CAAkBT,OADtB;AAELC,IAAAA,QAAQ,EAAEO,KAAK,CAACC,WAAN,CAAkBR,QAFvB;AAGLE,IAAAA,UAAU,EAAEK,KAAK,CAACC,WAAN,CAAkBL,mBAHzB;AAILM,IAAAA,MAAM,EAAEF,KAAK,CAACG,IAAN,CAAWD;AAJd,GAAP;AAMD,CAPD;;AAQA,IAAIE,kBAAkB,GAAG;AACvBC,EAAAA,cAAc,EAAE1B,gBADO;AAEvBe,EAAAA,eAAe,EAAEjB,iBAFM;AAGvBmB,EAAAA,mBAAmB,EAAEtB,qBAHE;AAIvBe,EAAAA,UAAU,EAAEX,YAJW;AAKvBY,EAAAA,aAAa,EAAEd,eALQ;AAMvBqB,EAAAA,UAAU,EAAEtB,YANW;AAOvBuB,EAAAA,YAAY,EAAElB;AAPS,CAAzB;AAUA,eAAeR,OAAO,CAAC2B,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CvB,UAAU,CAACC,gBAAD,CAAvD,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { followingInProgressAC, followUserTC, getFollowUserTC, setFollowedUserAC, setProfileTC, setUserProfileAC, unFollowUserTC } from '../../redux/profileReducer';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = 2;\r\n    }\r\n    this.props.setProfile(userId);\r\n    this.props.getFollowUser(userId);\r\n  }\r\n  render() {\r\n    debugger;\r\n    return (<Profile profile={this.props.profile} followed={this.props.followed}\r\n      setFollowedUser={this.props.setFollowedUser} isProgress={this.props.isProgress}\r\n      followingInProgress={this.props.followingInProgress} followUser={this.props.followUser} unFollowUser={this.props.unFollowUser} />)\r\n  }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    followed: state.profilePage.followed,\r\n    isProgress: state.profilePage.followingInProgress,\r\n    isAuth: state.auth.isAuth\r\n    }\r\n}\r\nlet mapDispatchToProps = {\r\n  setUserProfile: setUserProfileAC,\r\n  setFollowedUser: setFollowedUserAC,\r\n  followingInProgress: followingInProgressAC,\r\n  setProfile: setProfileTC,\r\n  getFollowUser: getFollowUserTC,\r\n  followUser: followUserTC,\r\n  unFollowUser: unFollowUserTC\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ProfileContainer));"]},"metadata":{},"sourceType":"module"}