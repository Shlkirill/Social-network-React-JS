{"ast":null,"code":"export const toogleFollowAC = (id, followed) => {\n  return {\n    type: \"TOOGLE_FOLLOW\",\n    id,\n    followed\n  };\n};\nexport const setUsersAC = (users, totalCount) => {\n  return {\n    type: 'SET_USERS',\n    users,\n    totalCount\n  };\n};\nexport const setPageAC = clickPage => {\n  return {\n    type: 'SET_PAGE',\n    clickPage\n  };\n};\nexport const setCountUsersAC = count => {\n  return {\n    type: 'SET_COUNT_USERS',\n    count\n  };\n};\nexport const toogleIfFetchingAC = isFetching => {\n  return {\n    type: 'TOOGLE_IS_FETCHING',\n    isFetching\n  };\n};\nexport const followingInProgressAC = (id, value) => {\n  return {\n    type: 'FOLLOWING_IN_PROGRESS2',\n    id,\n    value\n  };\n};\nlet initialState = {\n  users: [],\n  pageSize: 10,\n  totalUsersCount: 0,\n  activePage: 1,\n  isFetching: false,\n  followingInProgress: false,\n  followingInProgress2: [4, 5]\n};\n\nconst UsersReducer = (state = initialState, action) => {\n  let stateCopy;\n\n  switch (action.type) {\n    case \"TOOGLE_FOLLOW\":\n      stateCopy = { ...state,\n        users: [...state.users]\n      };\n\n      for (let k of stateCopy.users) {\n        if (k.id == action.id) {\n          action.followed == true ? k.followed = false : k.followed = true;\n        }\n      }\n\n      return stateCopy;\n\n    case 'FOLLOWING_IN_PROGRESS':\n      let arr;\n\n      if (action.value == false) {\n        arr = state.followingInProgress2.filter(item => {\n          return item != action.id;\n        });\n      } else {\n        arr = [...state.followingInProgress2, action.id];\n      }\n\n      stateCopy = { ...state,\n        followingInProgress2: arr\n      };\n      return stateCopy;\n\n    case 'SET_USERS':\n      stateCopy = { ...state,\n        users: action.users,\n        totalUsersCount: action.totalCount\n      };\n      return stateCopy;\n\n    case 'SET_PAGE':\n      stateCopy = { ...state,\n        activePage: action.clickPage\n      };\n      return stateCopy;\n\n    case 'SET_COUNT_USERS':\n      stateCopy = { ...state,\n        pageSize: action.count\n      };\n      return stateCopy;\n\n    case 'TOOGLE_IS_FETCHING':\n      stateCopy = { ...state,\n        isFetching: action.isFetching\n      };\n      return stateCopy;\n\n    default:\n      return state;\n  }\n};\n\nexport default UsersReducer;","map":{"version":3,"sources":["C:/Users/Tor/Desktop/Web/4-React-JS/my-social-net/src/redux/usersReducer.js"],"names":["toogleFollowAC","id","followed","type","setUsersAC","users","totalCount","setPageAC","clickPage","setCountUsersAC","count","toogleIfFetchingAC","isFetching","followingInProgressAC","value","initialState","pageSize","totalUsersCount","activePage","followingInProgress","followingInProgress2","UsersReducer","state","action","stateCopy","k","arr","filter","item"],"mappings":"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","sourcesContent":["export const toogleFollowAC = (id, followed) => {\r\n  return {\r\n    type: \"TOOGLE_FOLLOW\",\r\n    id,\r\n    followed,\r\n  }\r\n}\r\nexport const setUsersAC = (users, totalCount) => {\r\n  return {\r\n    type: 'SET_USERS',\r\n    users,\r\n    totalCount,\r\n  }\r\n}\r\nexport const setPageAC = (clickPage) => {\r\n  return {\r\n    type: 'SET_PAGE',\r\n    clickPage,\r\n  }\r\n}\r\nexport const setCountUsersAC = (count) => {\r\n  return {\r\n    type: 'SET_COUNT_USERS',\r\n    count\r\n  }\r\n}\r\nexport const toogleIfFetchingAC = (isFetching) => {\r\n  return {\r\n    type: 'TOOGLE_IS_FETCHING',\r\n    isFetching\r\n  }\r\n}\r\nexport const followingInProgressAC = (id,value) => {\r\n  return {\r\n    type: 'FOLLOWING_IN_PROGRESS2',\r\n    id,\r\n    value\r\n  }\r\n}\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 10,\r\n  totalUsersCount: 0,\r\n  activePage: 1,\r\n  isFetching: false,\r\n  followingInProgress: false,\r\n  followingInProgress2: [4,5]\r\n};\r\n\r\nconst UsersReducer = (state = initialState, action) => {\r\n  let stateCopy;\r\n\r\n  switch (action.type) {\r\n    case \"TOOGLE_FOLLOW\":\r\n      stateCopy = {\r\n        ...state,\r\n        users: [...state.users]\r\n      };\r\n      for (let k of stateCopy.users) {\r\n        if (k.id == action.id) {\r\n          (action.followed == true) ? k.followed = false : k.followed = true;\r\n        }\r\n      }\r\n      return stateCopy;\r\n    case 'FOLLOWING_IN_PROGRESS':\r\n      let arr;\r\n    if (action.value == false) {\r\n      arr = state.followingInProgress2.filter((item) =>{\r\n        return item != action.id\r\n      })\r\n    } else {\r\n      arr = [...state.followingInProgress2, action.id]\r\n    }\r\n      stateCopy = {\r\n        ...state,\r\n        followingInProgress2: arr,\r\n      }\r\n      return stateCopy;\r\n    case 'SET_USERS':\r\n      stateCopy = {\r\n        ...state,\r\n        users: action.users,\r\n        totalUsersCount: action.totalCount,\r\n      }\r\n      return stateCopy;\r\n    case 'SET_PAGE':\r\n      stateCopy = {\r\n        ...state,\r\n        activePage: action.clickPage,\r\n      }\r\n      return stateCopy;\r\n    case 'SET_COUNT_USERS':\r\n      stateCopy = {\r\n        ...state,\r\n        pageSize: action.count,\r\n      }\r\n      return stateCopy;\r\n    case 'TOOGLE_IS_FETCHING':\r\n      stateCopy = {\r\n        ...state,\r\n        isFetching: action.isFetching\r\n      }\r\n      return stateCopy;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default UsersReducer;"]},"metadata":{},"sourceType":"module"}