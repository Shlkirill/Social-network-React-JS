{"ast":null,"code":"export const toogleFollowAC = (id, followed, target) => {\n  return {\n    type: \"TOOGLE_FOLLOW\",\n    userId: id,\n    followedText: followed,\n    targetButton: target\n  };\n};\nexport const setUsersAC = users => {\n  return {\n    type: 'SET_USERS',\n    users: users\n  };\n};\nlet initialState = {\n  users: [{\n    id: 1,\n    followed: true,\n    fullName: 'Andrey',\n    status: 'I`m fine',\n    location: {\n      country: 'Russia',\n      city: 'Belgorod'\n    },\n    avatar: 'https://www.meme-arsenal.com/memes/005754c81977199be7a2fb68c8f48107.jpg'\n  }, {\n    id: 2,\n    followed: false,\n    fullName: 'Nika',\n    status: 'I`m fine',\n    location: {\n      country: 'Russia',\n      city: 'Belgorod'\n    },\n    avatar: 'https://www.meme-arsenal.com/memes/005754c81977199be7a2fb68c8f48107.jpg'\n  }, {\n    id: 3,\n    followed: true,\n    fullName: 'Kirill',\n    status: 'I`m fine',\n    location: {\n      country: 'Russia',\n      city: 'Belgorod'\n    },\n    avatar: 'https://www.meme-arsenal.com/memes/005754c81977199be7a2fb68c8f48107.jpg'\n  }]\n};\n\nconst UsersReducer = (state = initialState, action) => {\n  let stateCopy;\n\n  switch (action.type) {\n    case \"TOOGLE_FOLLOW\":\n      console.log(action.targetButton);\n      stateCopy = { ...state,\n        users: [...state.users]\n      };\n\n      for (let k of stateCopy.users) {\n        if (k.id == action.userId) {\n          if (action.followedText == 'follow') {\n            k.followed = false;\n            action.targetButton.className = \"activeButtonToggleFollow\";\n          } else {\n            k.followed = true;\n          }\n        }\n      }\n\n      return stateCopy;\n\n    case 'SET_USERS':\n      stateCopy = { ...state,\n        users: [...state.users]\n      };\n      return stateCopy;\n\n    default:\n      return state;\n  }\n};\n\nexport default UsersReducer;","map":{"version":3,"sources":["C:/Users/Tor/Desktop/Web/4-React-JS/my-social-net/src/redux/usersReducer.js"],"names":["toogleFollowAC","id","followed","target","type","userId","followedText","targetButton","setUsersAC","users","initialState","fullName","status","location","country","city","avatar","UsersReducer","state","action","stateCopy","console","log","k","className"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAG,CAACC,EAAD,EAAKC,QAAL,EAAeC,MAAf,KAA0B;AACtD,SAAO;AACLC,IAAAA,IAAI,EAAE,eADD;AAELC,IAAAA,MAAM,EAAEJ,EAFH;AAGLK,IAAAA,YAAY,EAAEJ,QAHT;AAILK,IAAAA,YAAY,EAAEJ;AAJT,GAAP;AAMD,CAPM;AAQP,OAAO,MAAMK,UAAU,GAAIC,KAAD,IAAW;AACnC,SAAO;AACLL,IAAAA,IAAI,EAAE,WADD;AAELK,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID,CALM;AAOP,IAAIC,YAAY,GAAG;AACjBD,EAAAA,KAAK,EAAE,CACL;AAAER,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,QAAQ,EAAE,IAAnB;AAAyBS,IAAAA,QAAQ,EAAE,QAAnC;AAA6CC,IAAAA,MAAM,EAAE,UAArD;AAAiEC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,OAAO,EAAE,QAAX;AAAqBC,MAAAA,IAAI,EAAE;AAA3B,KAA3E;AAAoHC,IAAAA,MAAM,EAAE;AAA5H,GADK,EAEL;AAAEf,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,QAAQ,EAAE,KAAnB;AAA0BS,IAAAA,QAAQ,EAAE,MAApC;AAA4CC,IAAAA,MAAM,EAAE,UAApD;AAAgEC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,OAAO,EAAE,QAAX;AAAqBC,MAAAA,IAAI,EAAE;AAA3B,KAA1E;AAAmHC,IAAAA,MAAM,EAAE;AAA3H,GAFK,EAGL;AAAEf,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,QAAQ,EAAE,IAAnB;AAAyBS,IAAAA,QAAQ,EAAE,QAAnC;AAA6CC,IAAAA,MAAM,EAAE,UAArD;AAAiEC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,OAAO,EAAE,QAAX;AAAqBC,MAAAA,IAAI,EAAE;AAA3B,KAA3E;AAAoHC,IAAAA,MAAM,EAAE;AAA5H,GAHK;AADU,CAAnB;;AAQA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACrD,MAAIC,SAAJ;;AAEA,UAAQD,MAAM,CAACf,IAAf;AACE,SAAK,eAAL;AACEiB,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACZ,YAAnB;AACAa,MAAAA,SAAS,GAAG,EACV,GAAGF,KADO;AAEVT,QAAAA,KAAK,EAAE,CAAC,GAAGS,KAAK,CAACT,KAAV;AAFG,OAAZ;;AAIA,WAAK,IAAIc,CAAT,IAAcH,SAAS,CAACX,KAAxB,EAA+B;AAC7B,YAAIc,CAAC,CAACtB,EAAF,IAAQkB,MAAM,CAACd,MAAnB,EAA2B;AACzB,cAAIc,MAAM,CAACb,YAAP,IAAuB,QAA3B,EAAqC;AACnCiB,YAAAA,CAAC,CAACrB,QAAF,GAAa,KAAb;AACAiB,YAAAA,MAAM,CAACZ,YAAP,CAAoBiB,SAApB,GAAgC,0BAAhC;AACD,WAHD,MAGO;AACLD,YAAAA,CAAC,CAACrB,QAAF,GAAa,IAAb;AACD;AACF;AACF;;AACD,aAAOkB,SAAP;;AACF,SAAK,WAAL;AACEA,MAAAA,SAAS,GAAG,EACV,GAAGF,KADO;AAEVT,QAAAA,KAAK,EAAE,CAAC,GAAGS,KAAK,CAACT,KAAV;AAFG,OAAZ;AAIA,aAAOW,SAAP;;AACF;AACE,aAAOF,KAAP;AAzBJ;AA2BD,CA9BD;;AAgCA,eAAeD,YAAf","sourcesContent":["export const toogleFollowAC = (id, followed, target) => {\r\n  return {\r\n    type: \"TOOGLE_FOLLOW\",\r\n    userId: id,\r\n    followedText: followed,\r\n    targetButton: target\r\n  }\r\n}\r\nexport const setUsersAC = (users) => {\r\n  return {\r\n    type: 'SET_USERS',\r\n    users: users,\r\n  }\r\n}\r\n\r\nlet initialState = {\r\n  users: [\r\n    { id: 1, followed: true, fullName: 'Andrey', status: 'I`m fine', location: { country: 'Russia', city: 'Belgorod' }, avatar: 'https://www.meme-arsenal.com/memes/005754c81977199be7a2fb68c8f48107.jpg' },\r\n    { id: 2, followed: false, fullName: 'Nika', status: 'I`m fine', location: { country: 'Russia', city: 'Belgorod' }, avatar: 'https://www.meme-arsenal.com/memes/005754c81977199be7a2fb68c8f48107.jpg' },\r\n    { id: 3, followed: true, fullName: 'Kirill', status: 'I`m fine', location: { country: 'Russia', city: 'Belgorod' }, avatar: 'https://www.meme-arsenal.com/memes/005754c81977199be7a2fb68c8f48107.jpg' },\r\n  ],\r\n};\r\n\r\nconst UsersReducer = (state = initialState, action) => {\r\n  let stateCopy;\r\n\r\n  switch (action.type) {\r\n    case \"TOOGLE_FOLLOW\":\r\n      console.log(action.targetButton);\r\n      stateCopy = {\r\n        ...state,\r\n        users: [...state.users]\r\n      };\r\n      for (let k of stateCopy.users) {\r\n        if (k.id == action.userId) {\r\n          if (action.followedText == 'follow') {\r\n            k.followed = false;\r\n            action.targetButton.className = \"activeButtonToggleFollow\";\r\n          } else {\r\n            k.followed = true;\r\n          }\r\n        }\r\n      }\r\n      return stateCopy;\r\n    case 'SET_USERS':\r\n      stateCopy = {\r\n        ...state,\r\n        users: [...state.users,],\r\n      }\r\n      return stateCopy;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default UsersReducer;"]},"metadata":{},"sourceType":"module"}