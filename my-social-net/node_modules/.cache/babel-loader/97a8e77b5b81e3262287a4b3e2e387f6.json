{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\Web\\\\4-React-JS\\\\my-social-net\\\\src\\\\components\\\\Profile\\\\Profile\\u0421ontainer.jsx\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Profile from './Profile';\nimport { followingInProgressAC, followUserTC, getFollowUserTC, getUpdateSatusTC, getUserStatusTC, setFollowedUserAC, setProfileTC, setUserProfileAC, unFollowUserTC } from '../../redux/profileReducer';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { withAuthRedirectComponent } from '../hoc/withAuthRedirect';\n\nconst ProfileContainer = props => {\n  useEffect(() => {\n    let userId = props.match.params.userId;\n\n    if (!userId) {\n      userId = props.authId;\n    }\n\n    props.setProfile(userId);\n    props.getFollowUser(userId);\n    props.getUserStatus(userId);\n  }, []);\n  return /*#__PURE__*/React.createElement(Profile, {\n    profile: props.profile,\n    followed: props.followed,\n    setFollowedUser: props.setFollowedUser,\n    isProgress: props.isProgress,\n    followingInProgress: props.followingInProgress,\n    followUser: props.followUser,\n    unFollowUser: props.unFollowUser,\n    status: props.status,\n    getUpdateSatus: props.getUpdateSatus,\n    getUserStatus: props.getUserStatus,\n    authId: props.authId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  });\n}; // class ProfileContainer extends React.Component {\n//   componentDidMount() {\n//     let userId = this.props.match.params.userId;\n//     if (!userId) {\n//       userId = this.props.authId;\n//     }\n//     this.props.setProfile(userId);\n//     this.props.getFollowUser(userId);\n//     this.props.getUserStatus(userId);\n//   }\n//   render() {\n//     return (<Profile profile={this.props.profile} followed={this.props.followed}\n//       setFollowedUser={this.props.setFollowedUser} isProgress={this.props.isProgress}\n//       followingInProgress={this.props.followingInProgress} followUser={this.props.followUser}\n//       unFollowUser={this.props.unFollowUser} status={this.props.status}\n//       getUpdateSatus={this.props.getUpdateSatus} getUserStatus={this.props.getUserStatus}\n//       authId={this.props.authId} />)\n//   }\n// }\n\n\nlet mapStateToProps = state => {\n  return {\n    profile: state.profilePage.profile,\n    followed: state.profilePage.followed,\n    isProgress: state.profilePage.followingInProgress,\n    status: state.profilePage.status,\n    authId: state.auth.id\n  };\n};\n\nlet mapDispatchToProps = {\n  setUserProfile: setUserProfileAC,\n  setFollowedUser: setFollowedUserAC,\n  followingInProgress: followingInProgressAC,\n  setProfile: setProfileTC,\n  getFollowUser: getFollowUserTC,\n  followUser: followUserTC,\n  unFollowUser: unFollowUserTC,\n  getUserStatus: getUserStatusTC,\n  getUpdateSatus: getUpdateSatusTC\n};\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirectComponent, withRouter)(ProfileContainer);","map":{"version":3,"sources":["D:/Desktop/Web/4-React-JS/my-social-net/src/components/Profile/ProfileÐ¡ontainer.jsx"],"names":["React","useEffect","connect","Profile","followingInProgressAC","followUserTC","getFollowUserTC","getUpdateSatusTC","getUserStatusTC","setFollowedUserAC","setProfileTC","setUserProfileAC","unFollowUserTC","withRouter","compose","withAuthRedirectComponent","ProfileContainer","props","userId","match","params","authId","setProfile","getFollowUser","getUserStatus","profile","followed","setFollowedUser","isProgress","followingInProgress","followUser","unFollowUser","status","getUpdateSatus","mapStateToProps","state","profilePage","auth","id","mapDispatchToProps","setUserProfile"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { followingInProgressAC, followUserTC, getFollowUserTC, getUpdateSatusTC, getUserStatusTC, setFollowedUserAC, setProfileTC, setUserProfileAC, unFollowUserTC } from '../../redux/profileReducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirectComponent } from '../hoc/withAuthRedirect';\r\n\r\nconst ProfileContainer = (props) => {\r\n  useEffect(() => {\r\n    let userId = props.match.params.userId;\r\n    if (!userId) {\r\n      userId = props.authId;\r\n    }\r\n    props.setProfile(userId);\r\n    props.getFollowUser(userId);\r\n    props.getUserStatus(userId);\r\n  }, [])\r\n\r\n  return (<Profile profile={props.profile} followed={props.followed}\r\n    setFollowedUser={props.setFollowedUser} isProgress={props.isProgress}\r\n    followingInProgress={props.followingInProgress} followUser={props.followUser}\r\n    unFollowUser={props.unFollowUser} status={props.status}\r\n    getUpdateSatus={props.getUpdateSatus} getUserStatus={props.getUserStatus}\r\n    authId={props.authId} />)\r\n}\r\n\r\n\r\n\r\n\r\n// class ProfileContainer extends React.Component {\r\n\r\n//   componentDidMount() {\r\n//     let userId = this.props.match.params.userId;\r\n//     if (!userId) {\r\n//       userId = this.props.authId;\r\n//     }\r\n//     this.props.setProfile(userId);\r\n//     this.props.getFollowUser(userId);\r\n//     this.props.getUserStatus(userId);\r\n//   }\r\n//   render() {\r\n//     return (<Profile profile={this.props.profile} followed={this.props.followed}\r\n//       setFollowedUser={this.props.setFollowedUser} isProgress={this.props.isProgress}\r\n//       followingInProgress={this.props.followingInProgress} followUser={this.props.followUser}\r\n//       unFollowUser={this.props.unFollowUser} status={this.props.status}\r\n//       getUpdateSatus={this.props.getUpdateSatus} getUserStatus={this.props.getUserStatus}\r\n//       authId={this.props.authId} />)\r\n//   }\r\n// }\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    followed: state.profilePage.followed,\r\n    isProgress: state.profilePage.followingInProgress,\r\n    status: state.profilePage.status,\r\n    authId: state.auth.id\r\n  }\r\n}\r\nlet mapDispatchToProps = {\r\n  setUserProfile: setUserProfileAC,\r\n  setFollowedUser: setFollowedUserAC,\r\n  followingInProgress: followingInProgressAC,\r\n  setProfile: setProfileTC,\r\n  getFollowUser: getFollowUserTC,\r\n  followUser: followUserTC,\r\n  unFollowUser: unFollowUserTC,\r\n  getUserStatus: getUserStatusTC,\r\n  getUpdateSatus: getUpdateSatusTC,\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirectComponent,\r\n  withRouter,\r\n)(ProfileContainer);"]},"metadata":{},"sourceType":"module"}