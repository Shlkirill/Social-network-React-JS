{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tor\\\\Desktop\\\\Web\\\\4-React-JS\\\\my-social-net\\\\src\\\\components\\\\Users\\\\UsersContainer.jsx\";\nimport React from 'react';\nimport axios from 'axios';\nimport Users from './Users';\nimport { connect } from 'react-redux';\nimport { toogleFollowAC, setUsersAC, setPageAC, setCountUsersAC, toogleIfFetchingAC } from '../../redux/usersReducer';\nimport { addFriendAC } from '../../redux/friendsReducer';\nimport getUsers from '../../api/api';\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getActivePage = page => {\n      this.props.setPage(page);\n      this.props.toogleIsFetching(true);\n\n      let handler = response => {\n        this.props.setUsers(response.items, response.totalCount);\n        this.props.toogleIsFetching(false);\n      };\n\n      getUsers(this.props.pageSize, page).then(handler);\n    };\n\n    this.setCountUsers = value => {\n      this.props.setCountUsers(value);\n      this.props.toogleIsFetching(true);\n      let serverRequest = axios.get(`https://social-network.samuraijs.com/api/1.0/users?count=${value}&page=${this.props.activePage}`, {\n        withCredentials: true\n      });\n\n      let handler = response => {\n        this.props.setUsers(response.data.items, response.data.totalCount);\n        this.props.toogleIsFetching(false);\n      };\n\n      serverRequest.then(handler);\n    };\n  }\n\n  componentDidMount() {\n    this.props.toogleIsFetching(true);\n\n    let handler = response => {\n      this.props.setUsers(response.items, response.totalCount);\n      this.props.toogleIsFetching(false);\n    };\n\n    getUsers(this.props.pageSize, this.props.activePage).then(handler);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Users, {\n      getActivePage: this.getActivePage,\n      setCountUsers: this.setCountUsers,\n      users: this.props.users,\n      toogleFollow: this.props.toogleFollow,\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      isFetching: this.props.isFetching,\n      addFriend: this.props.addFriend,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.allUsers.users,\n    pageSize: state.allUsers.pageSize,\n    totalUsersCount: state.allUsers.totalUsersCount,\n    avtivePage: state.allUsers.activePage,\n    isFetching: state.allUsers.isFetching\n  };\n};\n\nlet mapDispatchToProps = {\n  toogleFollow: toogleFollowAC,\n  setUsers: setUsersAC,\n  setPage: setPageAC,\n  setCountUsers: setCountUsersAC,\n  toogleIsFetching: toogleIfFetchingAC,\n  addFriend: addFriendAC\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);","map":{"version":3,"sources":["C:/Users/Tor/Desktop/Web/4-React-JS/my-social-net/src/components/Users/UsersContainer.jsx"],"names":["React","axios","Users","connect","toogleFollowAC","setUsersAC","setPageAC","setCountUsersAC","toogleIfFetchingAC","addFriendAC","getUsers","UsersContainer","Component","getActivePage","page","props","setPage","toogleIsFetching","handler","response","setUsers","items","totalCount","pageSize","then","setCountUsers","value","serverRequest","get","activePage","withCredentials","data","componentDidMount","render","users","toogleFollow","totalUsersCount","isFetching","addFriend","mapStateToProps","state","allUsers","avtivePage","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport Users from './Users';\r\nimport { connect } from 'react-redux';\r\nimport { toogleFollowAC, setUsersAC, setPageAC, setCountUsersAC, toogleIfFetchingAC } from '../../redux/usersReducer';\r\nimport { addFriendAC } from '../../redux/friendsReducer';\r\nimport getUsers from '../../api/api';\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.toogleIsFetching(true);\r\n        let handler = (response) => {\r\n            this.props.setUsers(response.items, response.totalCount);\r\n            this.props.toogleIsFetching(false);\r\n        };\r\n        getUsers(this.props.pageSize, this.props.activePage).then(handler);\r\n    }\r\n    getActivePage = (page) => {\r\n        this.props.setPage(page);\r\n        this.props.toogleIsFetching(true);\r\n        let handler = (response) => {\r\n            this.props.setUsers(response.items, response.totalCount);\r\n            this.props.toogleIsFetching(false);\r\n        };\r\n        getUsers(this.props.pageSize, page).then(handler);\r\n    }\r\n    setCountUsers = (value) => {\r\n        this.props.setCountUsers(value);\r\n        this.props.toogleIsFetching(true);\r\n        let serverRequest = axios.get(`https://social-network.samuraijs.com/api/1.0/users?count=${value}&page=${this.props.activePage}`, {\r\n            withCredentials: true,\r\n        });\r\n\r\n        let handler = (response) => {\r\n            this.props.setUsers(response.data.items, response.data.totalCount);\r\n            this.props.toogleIsFetching(false);\r\n        };\r\n        serverRequest.then(handler);\r\n    }\r\n    render() {\r\n        return (\r\n            <Users getActivePage={this.getActivePage}\r\n                setCountUsers={this.setCountUsers}\r\n                users={this.props.users}\r\n                toogleFollow={this.props.toogleFollow}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                isFetching={this.props.isFetching}\r\n                addFriend={this.props.addFriend} />\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.allUsers.users,\r\n        pageSize: state.allUsers.pageSize,\r\n        totalUsersCount: state.allUsers.totalUsersCount,\r\n        avtivePage: state.allUsers.activePage,\r\n        isFetching: state.allUsers.isFetching\r\n    }\r\n}\r\nlet mapDispatchToProps = {\r\n    toogleFollow: toogleFollowAC,\r\n    setUsers: setUsersAC,\r\n    setPage: setPageAC,\r\n    setCountUsers: setCountUsersAC,\r\n    toogleIsFetching: toogleIfFetchingAC,\r\n    addFriend: addFriendAC,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);"]},"metadata":{},"sourceType":"module"}