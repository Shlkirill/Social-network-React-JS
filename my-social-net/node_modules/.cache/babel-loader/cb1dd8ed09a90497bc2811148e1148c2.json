{"ast":null,"code":"import { act } from \"@testing-library/react\";\nexport const addMessageActionCreator = (text, id) => {\n  return {\n    type: \"ADD-MESSAGE\",\n    newMessage: text,\n    id: id\n  };\n};\nexport const addFriendAC = (id, avatar, name) => {\n  return {\n    type: \"ADD-FRIEND\",\n    id,\n    avatar,\n    name\n  };\n};\nlet initialState = {\n  friends: [{\n    id: 1,\n    name: 'kirill'\n  }],\n  messages: {\n    1: [{\n      id: 1,\n      name: 'Andrey',\n      text: 'Hello!'\n    }, {\n      id: 2,\n      name: 'Me',\n      text: 'Hi!'\n    }, {\n      id: 3,\n      name: 'Andrey',\n      text: 'How are you?'\n    }, {\n      id: 4,\n      name: 'Me',\n      text: 'I`m ok, and you?'\n    }, {\n      id: 5,\n      name: 'Andrey',\n      text: 'I`m fine!'\n    }],\n    2: [{\n      id: 1,\n      name: 'Shasha',\n      text: 'Hello!'\n    }],\n    3: [],\n    4: [],\n    5: [],\n    6: [],\n    7: []\n  }\n};\n\nconst friendsReducer = (state = initialState, action) => {\n  let stateCopy;\n\n  switch (action.type) {\n    case \"ADD-MESSAGE\":\n      stateCopy = { ...state,\n        messages: { ...state.messages\n        }\n      };\n      let newId = stateCopy.messages[action.id].length + 1;\n      let newMessage = {\n        id: newId,\n        name: 'Me',\n        text: action.newMessage\n      };\n      stateCopy.messages[action.id].push(newMessage);\n      return stateCopy;\n\n    case \"ADD-FRIEND\":\n      let newFriend = {\n        id: action.id,\n        name: action.name,\n        avatar: action.avatar\n      };\n      stateCopy = { ...state\n      };\n      stateCopy.friends.push(newFriend);\n      console.log(stateCopy);\n      return stateCopy;\n\n    default:\n      return state;\n  }\n};\n\nexport default friendsReducer;","map":{"version":3,"sources":["D:/Desktop/Web/4-React-JS/my-social-net/src/redux/friendsReducer.js"],"names":["act","addMessageActionCreator","text","id","type","newMessage","addFriendAC","avatar","name","initialState","friends","messages","friendsReducer","state","action","stateCopy","newId","length","push","newFriend","console","log"],"mappings":"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","sourcesContent":["import { act } from \"@testing-library/react\";\r\n\r\nexport const addMessageActionCreator = (text, id) => {\r\n  return {\r\n    type: \"ADD-MESSAGE\",\r\n    newMessage: text,\r\n    id: id\r\n  }\r\n}\r\nexport const addFriendAC = (id, avatar, name) => {\r\n  return {\r\n    type: \"ADD-FRIEND\",\r\n    id,\r\n    avatar,\r\n    name\r\n  }\r\n}\r\nlet initialState = {\r\n  friends: [{id:1, name:'kirill'}\r\n  ],\r\n\r\n  messages: {\r\n    1: [\r\n      { id: 1, name: 'Andrey', text: 'Hello!' },\r\n      { id: 2, name: 'Me', text: 'Hi!' },\r\n      { id: 3, name: 'Andrey', text: 'How are you?' },\r\n      { id: 4, name: 'Me', text: 'I`m ok, and you?' },\r\n      { id: 5, name: 'Andrey', text: 'I`m fine!' }\r\n    ],\r\n    2: [\r\n      { id: 1, name: 'Shasha', text: 'Hello!' },\r\n    ],\r\n    3: [\r\n\r\n    ],\r\n    4: [\r\n\r\n    ],\r\n    5: [\r\n\r\n    ],\r\n    6: [\r\n\r\n    ],\r\n    7: [\r\n\r\n    ],\r\n  }\r\n};\r\n\r\nconst friendsReducer = (state = initialState, action) => {\r\n  let stateCopy;\r\n\r\n  switch (action.type) {\r\n    case \"ADD-MESSAGE\":\r\n      stateCopy = {\r\n        ...state,\r\n        messages: { ...state.messages },\r\n      };\r\n      let newId = stateCopy.messages[action.id].length + 1;\r\n      let newMessage = {\r\n        id: newId,\r\n        name: 'Me',\r\n        text: action.newMessage,\r\n      };\r\n      stateCopy.messages[action.id].push(newMessage);\r\n      return stateCopy;\r\n    case \"ADD-FRIEND\":\r\n      let newFriend = {\r\n        id: action.id,\r\n        name: action.name,\r\n        avatar: action.avatar\r\n      }\r\n      stateCopy = {\r\n        ...state,\r\n      };\r\n      stateCopy.friends.push(newFriend);\r\n      console.log(stateCopy);\r\n      return stateCopy;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default friendsReducer;"]},"metadata":{},"sourceType":"module"}