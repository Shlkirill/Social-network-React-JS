{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tor\\\\Desktop\\\\Web\\\\4-React-JS\\\\my-social-net\\\\src\\\\universalBlocks\\\\forms\\\\AddNewText.jsx\";\nimport React from 'react';\nimport { Field } from 'redux-form';\nimport { required, maxLength, minLength } from '../../utils/validations/validation';\nimport { TextareaField } from './formsControls/formsControls.jsx';\nimport styles from './AddNewText.module.css';\nconst maxLength100 = maxLength(100);\nconst maxLength200 = maxLength(200);\n\nconst FormAddNewText = props => {\n  const validateCreactor = () => {\n    switch (props.name) {\n      case 'newPost':\n        return [maxLength200];\n\n      case 'newMessage':\n        return [maxLength100];\n    }\n  };\n\n  console.log(props.meta.error);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: styles.inputText,\n    name: props.name,\n    component: TextareaField,\n    type: \"text\",\n    placeholder: props.placeholder,\n    validate: validateCreactor(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.inputSubmit,\n    disabled: props.pristine || props.submitting || props.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Send\")));\n};\n\nexport default FormAddNewText;","map":{"version":3,"sources":["C:/Users/Tor/Desktop/Web/4-React-JS/my-social-net/src/universalBlocks/forms/AddNewText.jsx"],"names":["React","Field","required","maxLength","minLength","TextareaField","styles","maxLength100","maxLength200","FormAddNewText","props","validateCreactor","name","console","log","meta","error","handleSubmit","inputText","placeholder","inputSubmit","pristine","submitting"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,SAA9B,QAA+C,oCAA/C;AACA,SAASC,aAAT,QAA8B,mCAA9B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,MAAMC,YAAY,GAAGJ,SAAS,CAAC,GAAD,CAA9B;AACA,MAAMK,YAAY,GAAGL,SAAS,CAAC,GAAD,CAA9B;;AAEA,MAAMM,cAAc,GAAIC,KAAD,IAAW;AAEhC,QAAMC,gBAAgB,GAAG,MAAM;AAC7B,YAAQD,KAAK,CAACE,IAAd;AACE,WAAK,SAAL;AACE,eAAO,CAACJ,YAAD,CAAP;;AACF,WAAK,YAAL;AACE,eAAO,CAACD,YAAD,CAAP;AAJJ;AAMD,GAPD;;AAQAM,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,IAAN,CAAWC,KAAvB;AACA,sBACE;AAAM,IAAA,QAAQ,EAAEN,KAAK,CAACO,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEX,MAAM,CAACY,SAAzB;AAAoC,IAAA,IAAI,EAAER,KAAK,CAACE,IAAhD;AACE,IAAA,SAAS,EAAEP,aADb;AAC4B,IAAA,IAAI,EAAC,MADjC;AACwC,IAAA,WAAW,EAAEK,KAAK,CAACS,WAD3D;AAEE,IAAA,QAAQ,EAAER,gBAAgB,EAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAEL,MAAM,CAACc,WAA1B;AAAuC,IAAA,QAAQ,EAAEV,KAAK,CAACW,QAAN,IAAkBX,KAAK,CAACY,UAAxB,IAAsCZ,KAAK,CAACM,KAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAPF,CADF;AAaD,CAxBD;;AA0BA,eAAeP,cAAf","sourcesContent":["import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport { required, maxLength, minLength } from '../../utils/validations/validation';\r\nimport { TextareaField } from './formsControls/formsControls.jsx'\r\nimport styles from './AddNewText.module.css';\r\n\r\nconst maxLength100 = maxLength(100)\r\nconst maxLength200 = maxLength(200)\r\n\r\nconst FormAddNewText = (props) => {\r\n\r\n  const validateCreactor = () => {\r\n    switch (props.name) {\r\n      case 'newPost':\r\n        return [maxLength200]\r\n      case 'newMessage':\r\n        return [maxLength100]\r\n    }\r\n  }\r\n  console.log(props.meta.error)\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n\r\n      <div>\r\n        <Field className={styles.inputText} name={props.name}\r\n          component={TextareaField} type=\"text\" placeholder={props.placeholder}\r\n          validate={validateCreactor()} />\r\n      </div>\r\n      <div>\r\n        <button className={styles.inputSubmit} disabled={props.pristine || props.submitting || props.error}>Send</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default FormAddNewText"]},"metadata":{},"sourceType":"module"}